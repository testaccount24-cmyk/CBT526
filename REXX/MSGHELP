/* rexx*/
arg inmsg outhelp
if inmsg = "" then
  inmsg = "grptdir.spi.rexx(msgs)"
if outhelp = "" then
  outhelp = "grptdir.spi.help"       /* the output dataset */
lines. = 0
log_check = sysdsn("'"outhelp"'")
IF log_check  = "DATASET NOT FOUND" THEN DO
  ADDRESS TSO "ALLOC DSN('"OUTHELP"') vol(tech03)",
  "UNIT(SYSAllDA) NEW DDN(outhelp) DIR(90)",
  "SPACE(15) CYLINDERS LRECL(80) BLKSIZE(24800) RECFM(F B) DSORG(PO)"
  address tso "free ddn(outhelp)"
END
address tso "alloc ddn(inmsg) dsn('"inmsg"') shr"
"EXECIO * DISKR INmsg ( FINIS STEM HOLD.)"
address tso "free  ddn(inmsg)"
msgid.0 = 0
/***************************************/
/**the below loop reads and divides up**/
/**the input data.. dir 14 sep 99     **/
/***************************************/
do x = 1 to hold.0
  last_msgid = msgid
  line = hold.x
  if word(line,1) = "*" then iterate x
  if (index(line,"TSA") > 0) & (index(line,":") > 0  ) then do
    PARSE VAR line 'TSA' MSGID ':' MSGTEXT
    say lastmsgid msgid
    if last_msgid /= msgid then do
      msgid.0 = msgid.0 + 1         /* we have another msg */
      hold = msgid.0
      msgid.hold = msgid            /* the array of msgid numbers */
      lines.msgid = 0
    end
  end
  lines.msgid = lines.msgid + 1 /* the # of data with this msgid */
  hold = lines.msgid
  out.msgid.hold = line         /* the actual data */
end
do t =  1 to msgid.0
  msgid = msgid.t
  say "**NEWMSGID **"  msgid
  output. = ""
  outnum = lines.msgid
  do v = 1 to lines.msgid
    output.v = out.msgid.v
    say out.msgid.v
  end
  output.1 = ")F "output.1
  outnum = outnum + 1
  output.outnum = ")X "
  outnum = outnum + 1
  output.outnum = ")O "
  memname = "TSA"msgid
  output = outhelp"("memname")"
  out_check = sysdsn("'"output"'")
  say out_check
  if out_check = "MEMBER NOT FOUND" then do
    address tso "alloc dsn('"output"') ddn(output) shr reus"
    ADDRESS MVS "EXECIO "outnum" DISKW output (FINIS STEM output.)"
    address tso "free ddn(output)"
  end
  if out_check = "OK" then do
    address tso "alloc dsn('"output"') ddn(output) shr reus"
    ADDRESS MVS "EXECIO "outnum" DISKW output (FINIS STEM output.)"
    address tso "free ddn(output)"
  end
end
exit 0
