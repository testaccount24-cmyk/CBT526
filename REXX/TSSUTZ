/** rexx                                                 **/
/**********************************************************/
/** ADDED WRITEDEBUG SUPPORT FOR DYNAM COMMANDS          **/
/**********************************************************/
/** ADDED TEMP/PERM PARM TO TABLE DEFINITION ROUTINE     **/
/**********************************************************/
/** ADDED POPUP MENU OPTIONS TO THE SYSTEM               **/
/**********************************************************/
/** REWRITE TO USE ISPF TABLES FOR SCREEN AND CMDS       **/
/**********************************************************/
/** THE MAIN DRIVER ROUTINE OF THE ENTIRE LOCAL PANEL    **/
/** SYSTEM. IT IS QUITE IN DEPTH SO I AINT GONNA SPLAIN  **/
/** IT.    DAVE 9 MAY 95                                 **/
/**********************************************************/
/**********************************************************/
/** EXEC NAME        : TSSUT                             **/
/** LAST MODIFIED    : 16 MAR  98                        **/
/**----------------INPUT REQUIRED -----------------------**/
/** PASSED ARGS        VALID VALUES                      **/
/** ANY VARIABLES CREATED IN TSSINI OR ISPF ARE AVAILABLE**/
/** TO ME HERE. ALTHOUGH THIS EXEC EXPECTS NO ARGS PER SE**/
/** ISPF VGETS - A TON OF THEM                           **/
/**                                                      **/
/**----------------OUTPUT PRODUCED-----------------------**/
/** VALID CONDITION CODES - 00                           **/
/** ISPF VARIABLES        - NONE.                        **/
/**----------------REQUIREMENTS--------------------------**/
/** CAN RUN STANDALONE : NO                              **/
/** ISPF ENVIRONMENT   : YES                             **/
/** EXECS CALLED WITHIN THIS EXEC : A TON OF THEM        **/
/**                                                      **/
/**********************************************************/
SIGNAL OFF ERROR
arg sample
if sample = "SAMPLE" then do
  sample = "YES"
  address ispexec "VPUT SAMPLE PROFILE"
end
PARSE VERSION V .
IF LEFT(V,5) = "REXXC" THEN COMPILED = "YES"
BEGIN_CPU = SYSVAR(SYSCPU)
ADDRESS ISPEXEC "VGET ZSYSID"
SYSID = ZSYSID
SPI_VERSION = 09APR1999
ADDRESS ISPEXEC
PR = PROMPT("OFF")
TVERMSG = "WARNING: YOU HAVE OVERRIDDEN ENVIRONMENTAL PARMS."
SYSUID = SYSVAR(SYSUID)
MSG2 = " "
DATA = " "
DATA2 = " "
ROW =
INT.0 = 0
BOOK= " "
CLEARMSG = "YES"
RELOAD = "BOTH"
REINIT: NOP
ADDRESS TSO "%TSSVERS" /* FIND OUT WHAT TOP SECRET VERSION IS RUNNIN*/
ADDRESS TSO "%TSSINI" SYSUID /* SET MY VARIABLES FOR ME */
IF RC = 24 THEN  EXIT 00     /* TSSINI DIED ! */
CALL ON ERROR NAME NEWINI
" ISPEXEC VGET ACID            PROFILE "
" ISPEXEC VGET AUTHNUM         PROFILE "
" ISPEXEC VGET AUTHCODE        PROFILE "
" ISPEXEC VGET AUTOINIT        PROFILE "
" ISPEXEC VGET CHKDSN          PROFILE "
" ISPEXEC VGET CMDPRE          PROFILE "
" ISPEXEC VGET CMDTABLE        PROFILE "
" ISPEXEC VGET DDS1            PROFILE "
" ISPEXEC VGET DDS2            PROFILE "
" ISPEXEC VGET DDS3            PROFILE "
" ISPEXEC VGET DDS4            PROFILE "
" ISPEXEC VGET DDS5            PROFILE "
" ISPEXEC VGET DDS6            PROFILE "
" ISPEXEC VGET DEF             PROFILE "
" ISPEXEC VGET DSBACK          PROFILE "
" ISPEXEC VGET DS1             PROFILE "
" ISPEXEC VGET DS2             PROFILE "
" ISPEXEC VGET DS3             PROFILE "
" ISPEXEC VGET DS4             PROFILE "
" ISPEXEC VGET DS5             PROFILE "
" ISPEXEC VGET DS6             PROFILE "
" ISPEXEC VGET JESNODE         PROFILE "
" ISPEXEC VGET MSG2            PROFILE "
" ISPEXEC VGET NEWPASS         PROFILE "
" ISPEXEC VGET PANEL           PROFILE "
" ISPEXEC VGET SCRPRE          PROFILE "
" ISPEXEC VGET SCRTABLE        PROFILE "
" ISPEXEC VGET SECRC           PROFILE "
" ISPEXEC VGET SRCCMD          PROFILE "
" ISPEXEC VGET SRCSCR          PROFILE "
" ISPEXEC VGET SYSTEM          PROFILE "
" ISPEXEC VGET TABLEDSN        PROFILE "
" ISPEXEC VGET TABLEOPT        PROFILE "
" ISPEXEC VGET TRAPNUM         PROFILE "
" ISPEXEC VGET TSSVERS         PROFILE "
" ISPEXEC VGET TVER            PROFILE "
" ISPEXEC VGET ZAPPLID                 "
" ISPEXEC VGET ZSCREEND                "
" ISPEXEC VPUT SECRC           PROFILE "
" ISPEXEC VPUT CLEARMSG        PROFILE "
  MSG= "GENERAL :"    SECRC
    SECRC = " "
    /*******************************************************/
    /* A $$ INDICATES THE MSG WAS SET BY TSSINI SO KEEP IT */
    /*******************************************************/
/***********************************************************/
/** AUTHORIZATION CHECKING.... NEVER CHANGE THIS CODE  *****/
/***********************************************************/
codes = words(authcode)
if codes > 20 then do
  say "Too many authorization codes provided. aborting "
end
parse var authcode w.1 w.2 w.3 w.4 w.5 w.6 w.7 w.8 w.9 w.10 w.11 w.12,
          w.13 w.14 w.15 w.16 w.17 w.18 w.19 w.20
i_digits = digits()
gooddate = "invalid"
numeric digits 60
/******************************/
psa = ptr(520)
psa = c2d(psa)  /* we got back a character value from function */
psa = psa + 6   /* it just got changed to a decimal value */
psa = d2x(psa)  /* we change it back to a hex value */
cpu = storage(psa,6) /* give the storage function the address in hex */
cpu = substr(cpu,3)
anycpu = 99999
/******************************/
gocode: nop
today = date(s)
do x = 1 to codes
  authcode = w.x
  tempdate = ((1000000000000 - authcode) + (cpu * cpu)) / cpu
  datechek = format(tempdate,60,0)
  t_date = ((1000000000000 - authcode) + (anycpu * anycpu)) / anycpu
  trial_check = format(t_date,60,0)
  if t_date = trial_check then do
    INT.0 = INT.0 + 1
    HOLDTEMP = INT.0
    INT.HOLDTEMP = "Trial code found for processor:" authcode
    INT.0 = INT.0 + 1
    HOLDTEMP = INT.0
    INT.HOLDTEMP = "You are authorized to run the product until" t_date
    trial = "yes"
    gooddate = t_date
  end
  if trial = "yes" then leave
  if tempdate /= datechek then do
    INT.0 = INT.0 + 1
    HOLDTEMP = INT.0
    INT.HOLDTEMP = "skipping code, not for this processor:" authcode
  end
  if tempdate /= datechek then iterate x
  INT.0 = INT.0 + 1
  HOLDTEMP = INT.0
  INT.HOLDTEMP = "You are authorized to run the product until" tempdate
  INT.0 = INT.0 + 1
  HOLDTEMP = INT.0
  INT.HOLDTEMP = "With authcode :" authcode
  gooddate = tempdate
end
if gooddate = "invalid" then do
    say "***********************************************"
    say "**No valid auth codes found for processor" cpu
    say "***********************************************"
    Say "Please provide valid AUTHCODE for processor " cpu
    Say "or hit PA1 to exit program "
    parse pull authcode
    codes = words(authcode)
    w.1 = authcode
    signal gocode
end
/* finalcode = 1000000000000 - ((cpu * gooddate) - (cpu * cpu))  */
timeleft = gooddate - today
if timeleft < 200 then do
  say "************************"
  say " Your current code is soon to expire."
  MSG2 = "$$ Authorization is soon to expire, on "gooddate
  ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
  say "************************"
end
if today > gooddate then do
  say "************************"
  say "expired product         "
  say "************************"
  exit 16
end
numeric digits i_digits
/* */
IF DATATYPE(INT.0) /= "NUM" THEN INT.0 = 0
INT.0 = INT.0 + 1
HOLDTEMP = INT.0
If compiled = "YES" then
  INT.HOLDTEMP = "Compiled version running, " spi_version
/***********************************************************/
/** AUTHORIZATION CHECKING END NEVER CHANGE THIS CODE  *****/
/***********************************************************/
IF WORD(MSG2,1) \= "$$" THEN DO
  MSG2 = " "
  " ISPEXEC VPUT MSG2 PROFILE "
END
IF NEEDINIT = "YES" THEN DO
  NEEDINIT = "NO"
  IF REINIT1 = "YES" THEN DO    /* DEEP TROUBLE ENDLESSLOOP */
    MSG2 = "TSSUT/TSSINI SYNC ERROR. FATAL ERROR." SIGL
    CLEARMSG = "NO"
  END
  ELSE DO
    REINIT1 = "YES" /* INDICATE WE HAVE CALLED TSSINI FROM HERE*/
    SAY "SIGNALLING REINIT"
    OTT = OUTTRAP("OFF")  /* NOTHING */
    SIGNAL REINIT
  END
END
TABLES: NOP
IF DATATYPE(INT.0) /= "NUM" THEN INT.0 = 0
IF TABLEOPT = "TEMP" THEN DO
  /* SAY "BUILDING TEMPORARY TABLES FOR THIS SESSION " */
  INT.0 = INT.0 + 1
  HOLDTEMP = INT.0
  INT.HOLDTEMP = "TABLE LOAD COMMENCING. RELOAD PARM IS " RELOAD
  OTT = OUTTRAP(ON.,100)  /* TRAPALL */
  IF (RELOAD = "BOTH") | (RELOAD = "SCREEN") THEN
  ADDRESS TSO "%TBMSCR" SRCSCR "." SCRTABLE AUTHNUM "NO"
  IF (RELOAD = "BOTH") | (RELOAD = "COMMAND") THEN
  ADDRESS TSO "%TBMCMD" SRCCMD "." CMDTABLE AUTHNUM "NO"
  /*****************************************************/
  /**THE ABOVE ROUTINES BUILD TABLES AND LEAVE THEM   **/
  /** OPEN FOR USE BY THIS EXEC                       **/
  /*****************************************************/
  RELOAD = "BOTH"
  INT.0 = INT.0 + 1
  HOLDTEMP = INT.0
  INT.HOLDTEMP = "TABLE LOAD COMPLETE."
  OTT = OUTTRAP("OFF")  /* NOTHING */
END
IF TABLEOPT /= "TEMP" THEN DO
  OTT = OUTTRAP(ON.,100)  /* TRAPALL */
  /*****************************************************/
  /**THE ABOVE OPTION INDICATES WE ARE USING PERMANENT**/
  /** TABLES THAT ARE PREDEFINED SO LETS OPEN THEM    **/
  /*****************************************************/
  CALL OFF ERROR
  SIGNAL OFF ERROR
  CALL ON ERROR NAME NOTABLE
  IF (RELOAD = "BOTH") | (RELOAD = "COMMAND") THEN
  ADDRESS ISPEXEC "TBOPEN" CMDTABLE "NOWRITE"
  /*IF STABLE_RC = 12 THEN */
  IF (RELOAD = "BOTH") | (RELOAD = "SCREEN") THEN
  ADDRESS ISPEXEC "TBOPEN" SCRTABLE "NOWRITE"
  TRACE OFF
END
CALL ON ERROR NAME SHUCKS
/*PANEL  = "SPIUTIL"                     */
/*ADDRESS ISPEXEC "VPUT PANEL PROFILE"   */
IF PANEL /= "SPIUTIL" THEN DO
  INT.0 = INT.0 + 1
  HOLDTEMP = INT.0
  INT.HOLDTEMP = "**Table display is disabled do to custom panel."
END
DEFPNL = PANEL
OLDTVER =  TVER
SCRNUM = ZSCREEND - 10
WDS. = " "
UNIT =  TSOUNIT
/******************************************************************/
/*  NOW I HAVE RETRIEVED ALL VARIABLES   BY TSSINI    DIR 9 SEP 92*/
/*  I WILL NOW CHECK FOR DSN VALIDITY....DIR  14 SEP 92           */
/******************************************************************/
DDS.1 = DDS1
DDS.2 = DDS2
DDS.3 = DDS3
DDS.4 = DDS4
DDS.5 = DDS5
DDS.6 = DDS6
IF CHKDSN < > "YES" THEN SIGNAL DSNDONE
DO TT = 1 TO 6
  XX = "DS"TT
  DSNTEMP = VALUE(XX)
  DSNMSG = SYSDSN(DSNTEMP)
  /* SAY "DSNMSG " DSNMSG "DSN= " DSNTEMP */
  IF DSNMSG = "OK" THEN ITERATE TT
  MSG2 = "WORK DSN(S) UNAVAILABLE. SOME ADVANCED FUNCTIONS MAY FAIL"
  /* SAY MSG2  */
  WDS.TT = "*"
  DDS.TT = DSNMSG
  IF DSNMSG = "DATASET NOT FOUND" THEN DO
    MSG2 = "WORK DNS(S) INVALID. SOME ADVANCED FUNCTIONS MAY FAIL"
     WDS.TT = "**"
  END
  IF WORD(MSG2,1) \= "$$" THEN ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
END
DDS1 = DDS.1
DDS2 = DDS.2
DDS3 = DDS.3
DDS4 = DDS.4
DDS5 = DDS.5
DDS6 = DDS.6
WDS1 = WDS.1
WDS2 = WDS.2
WDS3 = WDS.3
WDS4 = WDS.4
WDS5 = WDS.5
WDS6 = WDS.6
DSNDONE: NOP
BOPEN = NO
CURSOR = "OPT"
SPACES = "                "
CMDNUM = 0
RCODE = 0
MENUNUM = 0
SCRARRAY.0 = 0
MODE = "ONLINE"
IF  PANEL = "  " THEN  DO
  MSG2 =  "WARNING! TSSINI HAS FAILED. VARIABLES MAY BE"
  MSG2 =    MSG2 "CORRUPTED."
  PANEL = SPIUTIL
  CLEARMSG = NO
END
CALL OFF ERROR
SIGNAL OFF ERROR
CALL ON ERROR NAME SHUCKS
ANUM = 1
/* SAY SCRARRAY.0 AUTHNUM */
DO Q = 1 TO ANUM
  SCRARRAY.Q = OUTA.Q
END
MSG1. = ; MSG2. = ; MSG3. = ; MSG4. = ; MSG5. = ; MSG6.= ; MSG7. = ;
TEMPARRAY.0 = 0
THISREC = 1
Y = 0
X = 0
OTT = OUTTRAP(ON.,TRAPNUM) /* TRAP EVERYTHING */
SOURCE = PREDEF
/******************************************************************/
/*  THIS IS THE LASTOF THE INIT AREA. WHAT FOLLOWS IS THE LOOP.   */
/******************************************************************/
TRAP_FLAG = "YES"
DISPPNL: NOP
  RCODE = 0 /*  RESET THE LAST ERROR RETURN CODE */
  IF WORD(HOLDLINE,1) = WORD(ACID,1) THEN ACID = HOLDLINE
  IF OPT = "NIL" THEN OPT = " "
  CPUUSED = SYSVAR(SYSCPU) - BEGIN_CPU
  ADDRESS ISPEXEC  "VGET MSG2 PROFILE"
  ADDRESS ISPEXEC  "VGET PANEL PROFILE"
  ADDRESS ISPEXEC  "VGET CLEARMSG PROFILE"
  ADDRESS ISPEXEC  "VPUT CPUUSED  PROFILE"
  AUTH = AUTHNUM
  /* "TBSARG TS5USC10 NAMECOND(AUTH,LE)" */
  IF PANEL = "SPISTAT" THEN SCAN = "YES"
  IF (FNAME /= "FNAME") & (SCAN = "NO") THEN DO
    OTT = OUTTRAP(ON.,TRAPNUM) /* TRAP EVERYTHING */
    ADDRESS ISPEXEC "TBSARG "SCRTABLE" ARGLIST(FNAME)"
    CALL OFF ERROR
    "TBGET" SCRTABLE
    ADDRESS ISPEXEC "TBSKIP "SCRTABLE" NUMBER(-"scrnum")"
    CALL ON ERROR NAME SHUCKS
    /*********************************************/
    /** EACH LINE PUT ON THE SCREEN UPDATES THE **/
    /** VARIABLES SO EACH TIME WE DONT SCAN WE  **/
    /** SET THE TOP OF SCREEN VALUE TO BOTTOM   **/
    /** - 14                  DAVE              **/
    /*********************************************/
  END
  SCAN = "NO"
  PNL_DISP = "YES"
  IF PANEL = "SPIUTIL" THEN
  "TBDISPL "SCRTABLE" PANEL("PANEL") CURSOR("CURSOR")"
  ELSE "DISPLAY PANEL("PANEL") CURSOR("CURSOR")"
  PNL_DISP = "NO"
  SOURCE = "PREDEF"
  IF OPT = "TRACEOFF" THEN TRACE OFF
  ACID_WORDNUM = WORDS(ACID)
  DATA_WORDNUM = WORDS(DATA)
  DATA2_WORDNUM = WORDS(DATA2)
  HOLDLINE = ACID
  "ISPEXEC VPUT ACID PROFILE"
  "ISPEXEC VPUT DATA PROFILE"
  "ISPEXEC VPUT DATA2 PROFILE"
  IF CLEARMSG = "YES"  THEN DO
    MSG2 =  " "
    CLEARMSG = "YES"
    ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
    ADDRESS ISPEXEC "VPUT CLEARMSG PROFILE"
  END
  MSG =   " "
  SECRC=  " "
  UPPER DATA
  UPPER DATA2
  UPPER ACID
  FUNCT= "GENERAL"
  CURSOR= "OPT"
  HOLD = ACID"     "
  FIRST4 = SUBSTR(HOLD,1,4)
/***********************************************************/
/* HERE WE START THE SPECIAL ENVIRONMENT AFFECTING         */
/* OPTIONS....................DIR 19 OCT 92                */
/***********************************************************/
  IF OPT = "SCREENLOAD" THEN DO
    IF (SYSDSN("'"ACID"'")/= "OK") & (SYSDSN(ACID)/= "OK") THEN DO
      SECRC = "LOAD DATASET NOT USABLE, LOAD ABORTED."
      SIGNAL GOTMSG
    END
    IF TABLEOPT /= "TEMP" THEN DO
      SECRC = "TABLE FORMAT IS NOT DYNAMIC, SCREENLOAD NOT VALID."
      SIGNAL GOTMSG
    END
    RELOAD = "SCREEN"
    "ISPEXEC TBEND "SCRTABLE
    SRCSCR = ACID
    SIGNAL TABLES
  END
  IF OPT = "COMMANDLOAD" THEN DO
    IF (SYSDSN("'"ACID"'")/= "OK") THEN DO
      SECRC = "LOAD DATASET NOT USABLE, LOAD ABORTED."
      SIGNAL GOTMSG
    END
    IF TABLEOPT /= "TEMP" THEN DO
      SECRC = "TABLE FORMAT IS NOT DYNAMIC, COMMANDLOAD NOT VALID."
      SIGNAL GOTMSG
    END
    RELOAD = "COMMAND"
    "ISPEXEC TBEND "CMDTABLE
    SRCCMD = ACID
    SIGNAL TABLES
  END
  IF OPT = "WRITEDEBUG" THEN DO
    TRAP_FLAG = "YES"
    OPT = "NIL"
    ADDRESS TSO "ALLOC DDN(OUT1) DSN("DS3") SHR REUS"
    ADDRESS MVS "EXECIO "INT.0" DISKW OUT1 ( FINIS STEM INT.)"
    ADDRESS TSO "FREE DDN(OUT1)"
    ADDRESS TSO "ALLOC DDN(OUT1) DSN("DS3") MOD"
    ADDRESS MVS "EXECIO "TRAPNUM" DISKW OUT1 ( FINIS STEM ON.)"
    ADDRESS TSO "FREE DDN(OUT1)"
    DO QW1 = 1 TO TRAPNUM; ON.QW1 = " "; END
    SECRC = TRAPNUM "LINES OF DEBUG FILE INFO WRITTEN TO "DS3
    address tso "%rxbrowse "ds3
    SIGNAL GOTMSG
  END
  IF OPT = "TRAPOFF" THEN DO
    OTT = OUTTRAP("OFF")  /* NOTHING */
    TRAP_FLAG = "NO"
    OPT = "NIL"
    SECRC = "ALL INTERNAL OUTPUT WILL NOW BE SHOWN."
    SIGNAL GOTMSG
  END
  IF OPT = "TRAPON" THEN TRAP_FLAG = "YES"
  IF OPT = "TRAPON" THEN DO
    TRAP_FLAG = "YES"
    SECRC = "I AM NOW TRAPPING SUBTASK CREATED MESSAGES."
    SIGNAL GOTMSG
  END
  IF TRAP_FLAG = "YES" THEN DO
     SS = OUTTRAP(ON.,TRAPNUM)
  END
  IF TRAP_FLAG = "NO" THEN DO
     SS = OUTTRAP(OFF)
  END
  IF (OPT = "NIL") | (OPT = " " )  THEN DO
    OPT = " "
    SIGNAL DISPPNL
  END
  IF OPT = "TRAPON" THEN TRAP_FLAG = "YES"
  IF OPT = "TRAPOFF" THEN TRAP_FLAG = "NO"
  IF OPT = "TRACE" THEN TRACE R
  IF OPT = "TRACE" THEN SIGNAL REDO
  IF OPT = "TRACEOFF" THEN SIGNAL REDO
  IF OPT = "LEAVE" THEN CALL SHUCKS
  IF OPT = "END" THEN EXIT
  IF OPT = "X" THEN CALL SHUCKS
  IF OPT = "QUIT" THEN CALL SHUCKS
  IF  TVER ¬= OLDTVER THEN  DO
    MSG2 = TVERMSG
    CLEARMSG = "NO"
  END
  IF OPT = "REXXCMD" THEN DO
   IF INDEX(ACID,"SOURCELINE") = 0 THEN INTERPRET ACID
   MSG = "REXX INPUT INTERPRETED SUCCESSFULLY."
   IF INDEX(ACID,"SOURCELINE") /= 0 THEN
     MSG = "INPUT IGNORED."
   OPT = " "
   SIGNAL REDO
  END
  IF (OPT ¬= "CMDO") &  (OPT ¬= "CMDS") THEN ACID = WORD(ACID,1)
  IF  (OPT = "STATUS") | (PANEL= "SPISTAT") THEN  DO
    IF (TVER =  OLDTVER) &  (MSG2 =  TVERMSG) THEN  DO
      MSG2 =  "ENVIRONMENT RESTORED TO TSSINI DEFAULT"
      MSG2 = MSG2 "VALUES."
      CLEARMSG = YES
    END
    "ISPEXEC VPUT TVER PROFILE "
    "ISPEXEC VPUT DS1 PROFILE  "
    "ISPEXEC VPUT DS2 PROFILE  "
    "ISPEXEC VPUT DS3 PROFILE  "
    "ISPEXEC VPUT DS4 PROFILE  "
    "ISPEXEC VPUT DSBACK PROFILE  "
    "ISPEXEC VPUT DS6 PROFILE  "
    "ISPEXEC VPUT DS5 PROFILE  "
    "ISPEXEC VPUT DEF PROFILE  "
  END
  IF  PANELRC = 8 THEN  DO
    PANEL= DEFPNL
    ADDRESS ISPEXEC "VPUT PANEL PROFILE"
    PANELRC=0
    MSG= "FUNCTION COMPLETED SUCCESSFULLY"
    FUNCT = "GENERAL"
    OPT=  " "
    SIGNAL REDO
  END
  IF  OPT = "REINIT" THEN  DO
    INI = "NO"
    RELOAD = "BOTH"
    "ISPEXEC TBEND "CMDTABLE
    "ISPEXEC TBEND "SCRTABLE
    "ISPEXEC VPUT INI PROFILE"
    SIGNAL REINIT
  END
  IF (OPT= "LS") | (OPT="LO") | (OPT="L") THEN DO
    IF AUTHNUM < 9 THEN DO
      IF ( INDEX(DATA,"PW") > 0 ) | ( INDEX(DATA,"PA") > 0 ) THEN
        DATA = "BASIC,XAUTH,TSO"
    END
  END
  /************************************************/
  /**--------DYNAMIC COMMAND AREA----------------**/
  /**  OW LETS PROCESS THE USERS CMDLIST DSN     **/
  /**--------DYNAMIC COMMAND AREA----------------**/
  /************************************************/
  ADDRESS ISPEXEC "TBTOP "CMDTABLE
  ADDRESS ISPEXEC "TBVCLEAR "CMDTABLE
  CMDNAME = OPT
  ADDRESS ISPEXEC "VPUT CMDNAME"
  ADDRESS ISPEXEC "TBSARG "CMDTABLE "ARGLIST(CMDNAME)"
  CALL OFF ERROR
  signal off error
  OTT = OUTTRAP(ON.,trapnum)  /* TRAPALL */
  IF TRAP_FLAG = "NO" THEN
    OTT = OUTTRAP("OFF")  /* TRAPNONE */
  "TBGET" CMDTABLE
  CMD_RC = RC
  CALL ON ERROR NAME SHUCKS
  IF CMD_RC = 0 THEN DO
    INT.0 = 0
    IF TRAP_FLAG = "NO" THEN
      SAY PGMNAME MSGOPT DATACK DATA2CK AUTH TRAPOPT BATCHOPT VARS
    IF TRAP_FLAG = "YES" THEN DO
      IF DATATYPE(INT.0) /= "NUM" THEN INT.0 = 0
      INT.0 = INT.0 + 1
      HOLDTEMP = INT.0
      INT.HOLDTEMP = "*********************************************"
      HOLDTEMP = HOLDTEMP + 1
      INT.HOLDTEMP = "***DYNAMIC ROUTINE ENTERED MATCH IS BELOW: **"
      HOLDTEMP = HOLDTEMP + 1
      INT.HOLDTEMP = "*********************************************"
      HOLDTEMP = HOLDTEMP + 1
      INT.HOLDTEMP = "PGM     MSG  DATA DATA2 AUTH TRAP BATCH VARS "
      HOLDTEMP = HOLDTEMP + 1
      INT.HOLDTEMP = PGMNAME MSGOPT"   " DATACK"    " DATA2CK"    ",
      AUTH"  " TRAPOPT"   " BATCHOPT "    "VARS
      INT.0 = HOLDTEMP
    END
    IF SUBSTR(PGMNAME,1,5) = "TVER." THEN
      PGMNAME= "%"||TVER||SUBSTR(PGMNAME,6)  /* VER 51 */
    ADDRESS ISPEXEC "VPUT MODE  PROFILE"
    IF TRAP_FLAG = "NO" THEN
      SAY "DYNAMIC ROUTINE FINDS COMMAND MATCH ON RECORD " Q
    FUNCT = OPT
    SOURCE = "DYNAM"
    IF AUTH > AUTHNUM THEN DO
      SECRC = "FAILED. REQUIRES AUTHORITY LEVEL" AUTH"."
      SECRC = SECRC " YOUR LEVEL IS" AUTHNUM
      SIGNAL GOTMSG
    END
    /*********************/
    /** CHECK DATA TYPE **/
    /*********************/
    IF (DATACK = "NUM" ) & (DATATYPE(DATA) ¬= "NUM") THEN DO
      MSG = "A NUMERIC DATA FIELD IS REQUIRED FOR THIS FUNCTION"
      SIGNAL REDO
    END
    IF (DATACK = "CHAR" ) & (DATATYPE(DATA) ¬= "CHAR") THEN DO
      MSG = "A CHARACTER DATA FIELD IS REQUIRED FOR THIS FUNCTION"
      SIGNAL REDO
    END
    /***********************************************************/
    /* MSN 06/01/95 - OPTC MEANS FIELD IS OPTIONAL BUT IF IT   */
    /*    IS CODED, THEN IT MUST BE CHARACTER FORMAT           */
    /***********************************************************/
    IF (DATACK = "OPTC" ) & (DATATYPE(DATA) ¬= "CHAR") THEN DO
      MSG = "ABORTED, IF PROVIDED THE DATA FIELD MUST BE CHARACTER."
      SIGNAL REDO
    END
    IF DATACK = "PAD."  THEN DO
      DATA = TRANSLATE(DATA,"."," ")
      SAY "DYNAM: BLANKS TRANSLATED TO DOTS IN DATA."
      SAY "DYNAM: RESULT OF TRANS:" DATA
    END
    IF (DATACK = "OPTN" ) & (DATATYPE(DATA) ¬= "NUM") THEN DO
      MSG = "ABORTED, IF PROVIDED THE DATA FIELD MUST BE NUMERIC."
      SIGNAL REDO
    END
    IF ( (DATACK = 1 ) | (DATACK = "CHAR" ) ) & (DATA = " ") THEN DO
      MSG = "THE DATA FIELD IS REQUIRED FOR THIS FUNCTION"
      SIGNAL REDO
    END
    IF (DATA2CK = "NUM" ) & (DATATYPE(DATA2) ¬= "NUM") THEN DO
      MSG = "A NUMERIC DATA2 FIELD IS REQUIRED FOR THIS FUNCTION"
      SIGNAL REDO
    END
    IF (DATA2CK = "CHAR" ) & (DATATYPE(DATA2) ¬= "CHAR") THEN DO
      MSG = "A CHARACTER DATA2 FIELD IS REQUIRED FOR THIS FUNCTION"
      SIGNAL REDO
    END
    IF ( (DATA2CK = 1 ) | (DATA2CK = "CHAR" ) ) & (DATA2= " ") THEN DO
      MSG = "THE DATA2 FIELD IS REQUIRED FOR THIS FUNCTION"
      SIGNAL REDO
    END
    /******************************/
    /** FUTURE CMD STACKING DO   **/
    /** GOES HERE.               **/
    /******************************/
    BATCH_VARS = " "
    PARSE VAR VARS W.1 W.2 W.3 W.4 W.5 W.6 W.7 W.8 W.9 W.10 W.11,
          W.12 W.13 W.14 W.15 W.16 W.17 W.18 W.19 W.20
    STOP =  WORDS(VARS)
    IF STOP > 20 THEN
      MSG2 = "DYNAM ROUTINE OVERFLOW MORE THAN 20 VARIABLES IN ARGS"
    /******************************/
    /** LETS SEPERATE THE VARS   **/
    /** FROM THE LITERALS IN THE **/
    /** COMMAND STREAM.          **/
    /** LITERALS HAVE A _ IN.    **/
    /******************************/
    DO T1 = 1 TO STOP
      STRIP = "NO"
      IF (INDEX(W.T1,"<") ¬= 0) THEN DO
        W.T1 = TRANSLATE(W.T1,"","<") /* REPLACE _ WITH NULL */
        W.T1 = STRIP(W.T1)
        STRIP = "YES"
        IF TRAP_FLAG = "NO" THEN
          SAY "DYNAM: DETECTED A NO SPACE VAR"
        IF TRAP_FLAG = "YES" THEN DO
          IF DATATYPE(INT.0) /= "NUM" THEN INT.0 = 0
          INT.0 = INT.0 + 1
          HOLDTEMP = INT.0
          INT.HOLDTEMP = "DYNAM: DETECTED A NO SPACE VAR"
          INT.0 = HOLDTEMP
        END
      END
      IF (INDEX(W.T1,"_") ¬= 0) | (DATATYPE(W.T1) = "NUM") THEN
        VAL = TRANSLATE(W.T1," ","_") /* REPLACE _ WITH SPACES */
      ELSE VAL = VALUE(W.T1)
      VAL = STRIP(VAL)
      IF STRIP = "NO" THEN
        BATCH_VARS = BATCH_VARS VAL
      ELSE
        BATCH_VARS = BATCH_VARS||VAL
      IF TRAP_FLAG = "NO" THEN
        SAY "VALUE OF VAR " W.T1 "IS " VAL
      IF TRAP_FLAG = "YES" THEN DO
        IF DATATYPE(INT.0) /= "NUM" THEN INT.0 = 0
        INT.0 = INT.0 + 1
        HOLDTEMP = INT.0
        INT.HOLDTEMP = "VALUE OF VAR " W.T1 "IS " VAL
        INT.0 = HOLDTEMP
      END
    END
    IF VARS = 0 THEN BATCH_VARS = " "
    IF  (MODE = "BATCH") & (BATCHOPT = 0) THEN DO
      BJCL.1 = PGMNAME BATCH_VARS
      IF INDEX(PGMNAME,"%") =  1 THEN
        BJCL.1 = "ISPSTART CMD("PGMNAME BATCH_VARS") NEWAPPL(TSS)"
      IF LENGTH(BJCL.1) > 70 THEN DO
        BJCL.1 = "ISPSTART -"
        BJCL.2 = " CMD("PGMNAME BATCH_VARS") -"
        ADDRESS MVS "EXECIO 2 DISKW BJCL (FINIS STEM BJCL.)"
        /*******************************************************/
        /* THE LINE BELOW WILL BE WRITTEN BY THE FALLTHRU AREA */
        /*******************************************************/
        BJCL.1 = " NEWAPPL(TSS)"
        BJCL.2 = "BJCL.2"
      END
      IF TRAP_FLAG = "NO" THEN
        SAY "THE BATCH FILE IS UPDATED, COMMAND IS " BJCL.1 BJCL.2
      ADDRESS MVS "EXECIO 1 DISKW BJCL (FINIS STEM BJCL.)"
      SIGNAL NOMSG
    END
    IF  (MODE = "BATCH") & (BATCHOPT = 1) THEN DO
      IF TRAP_FLAG = "NO" THEN
        SAY "DYNAM: THE BATCH FILE IS BEING ALLOCATED DISP = MOD"
      ADDRESS TSO "ALLOC DDN(BJCL) DSN(" DS5") MOD REUS"
      BOPEN = YES
    END
    ADDRESS ISPEXEC "VPUT (ACID DATA DATA2) PROFILE"
    IF (TRAPOPT = "OFF") | (TRAPOPT = 0) THEN
      SS = OUTTRAP(OFF)
    IF TRAP_FLAG = "NO" THEN
      SAY "ADDRESS TSO" PGMNAME BATCH_VARS
    IF TRAP_FLAG = "YES" THEN DO
      IF DATATYPE(INT.0) /= "NUM" THEN INT.0 = 0
      INT.0 = INT.0 + 1
      HOLDTEMP = INT.0
      INT.HOLDTEMP = "ADDRESS TSO" PGMNAME BATCH_VARS
      HOLDTEMP = HOLDTEMP + 1
      INT.HOLDTEMP = "*********************************************"
      HOLDTEMP = HOLDTEMP + 1
      INT.HOLDTEMP = "****CONTROL IS BEING ROUTED TO DYNAMIC COMMAND"
      HOLDTEMP = HOLDTEMP + 1
      INT.HOLDTEMP = "*********************************************"
      INT.0 = HOLDTEMP
    END
    ADDRESS "TSO" PGMNAME BATCH_VARS
    /******************************/
    /** FUTURE CMD STACKING ENDDO**/
    /** GOES HERE.               **/
    /******************************/
    IF TRAP_FLAG = "YES" THEN
      SS = OUTTRAP(ON.,TRAPNUM)
    ELSE
      SS = OUTTRAP(OFF)
    ZPF07 = "UP"
    ZPF19 = "UP"
    ZPF08 = "DOWN"
    ZPF20 = "DOWN"
    ADDRESS ISPEXEC "VPUT ZPF07  PROFILE"
    ADDRESS ISPEXEC "VPUT ZPF19  PROFILE"
    ADDRESS ISPEXEC "VPUT ZPF08  PROFILE"
    ADDRESS ISPEXEC "VPUT ZPF20  PROFILE"
    IF MSGOPT = 0 THEN SIGNAL NOMSG
    IF MSGOPT = "DATA" THEN DO
      ADDRESS ISPEXEC "VGET DATAAREA PROFILE"
      ACID = DATAAREA
    END
    SIGNAL GETMSG
  END
  /************************************************/
  /**--------DYNAMIC COMMAND AREA ENDS ----------**/
  /**  OW LETS PROCESS THE USERS CMDLIST DSN     **/
  /**--------DYNAMIC COMMAND AREA ENDS ----------**/
  /************************************************/
/***********************************************************/
/* HERE WE START THE NORMAL OPTIONS AREA....DIR 19 OCT 92  */
/***********************************************************/
  IF (OPT = "STATUS") | (OPT = "STAT") THEN  DO
    PANEL= "SPISTAT"
    ADDRESS ISPEXEC "VPUT PANEL PROFILE"
    MSG= "VARIABLE ENTRIES DISPLAYED" OPT
    FUNCT = "STATUS"
    IF  PANEL = "SPISTAT" THEN
      OPT= "STATUS" /* HE MAY HAVE CHANGED PANEL */
    SIGNAL REDO
  END
  IF  OPT = "VARSET" THEN  DO
    IF AUTHNUM < 10 THEN DO
      SECRC =  "VARSET REQUIRES AUTHNUM OF 10, YOUR AUTHNUM IS" AUTHNUM
      SIGNAL GOTMSG
    END
    IF LENGTH(ACID) > 8 THEN DO
      SECRC = "VARIABLE NAME IS TOO LONG, VARSET ABORTED."
      SIGNAL GOTMSG
    END
    INTERPRET ACID "=" DATA
    IF TRAP_FLAG = "NO" THEN SAY "ISSUING THIS COMMAND :",
      "ADDRESS ISPEXEC VPUT " ACID "PROFILE"
    IF TRAP_FLAG = "YES" THEN DO
      INT.1 =  "ISSUING:ADDRESS ISPEXEC VPUT " ACID "PROFILE"
    END
    ADDRESS ISPEXEC "VPUT " ACID "PROFILE"
    SECRC = "VARIABLE" ACID" TEMPORARILY RESET IN CURRENT PROFILE."
    SIGNAL GOTMSG
  END
  IF SUBSTR(OPT,1,1) = "." THEN  DO
    INDEX = SUBSTR(OPT,2)
    ADDRESS ISPEXEC "TBTOP "SCRTABLE
    ADDRESS ISPEXEC "TBVCLEAR "SCRTABLE
    INDEX1 = SUBSTR(INDEX,1,1)
    INDEX2 = SUBSTR(INDEX,2)
    UPPER INDEX1
    FNAME = INDEX1||INDEX2
    ADDRESS ISPEXEC "VPUT FNAME"
    CALL OFF ERROR
    ADDRESS ISPEXEC "TBSCAN "SCRTABLE" ARGLIST(FNAME) CONDLIST(GE)"
    RCODE1 = RC
    SCAN = "YES"
    Y = 0
    OPT     = " "
    IF RCODE1 = 8 THEN DO
      secrc = "Entry not found, or blanks exist in screen table"
      SAY "*********************************************************"
      SAY "SCREEN TABLE SCAN FAILED CHECK THAT SCREEN TABLE DOES NOT"
      SAY "HAVE LEADING BLANKS.                                     "
      SAY "*********************************************************"
      signal gotmsg
    END
    CALL ON ERROR NAME SHUCKS
    SIGNAL DISPPNL
  END
  IF  AUTHNUM < 4 THEN SIGNAL HUH
 /******************************************************************/
 /*  THE FOLLOWING FUNCTIONS ARE NOT GENERALLY NEEDED EXCEPT FOR   */
 /*  THE MOST POWERFUL ADMINISTRATORS. THIS IS WHY I CHECK AUTHNUM */
 /*  THIS ALLOWS THE FOLLOWING FUNCTIONS TO BE  EXECUTED FROM      */
 /*  THE TEST MENU........DAVE 20 MAY 91                           */
 /******************************************************************/
  IF OPT = "CLEARMSG"  THEN  DO
    CLEARMSG = "YES"
    ADDRESS ISPEXEC "VPUT CLEARMSG PROFILE"
    MSG2 = " "
    ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
    SECRC  = " MESSAGE AREAS CLEARED, MESSAGE OPTIONS RESET "
    SIGNAL GOTMSG
  END
  IF (OPT = "SUB") &  (MODE = "BATCH") THEN  DO
    BJCL.1 =  "@@"
    ADDRESS MVS "EXECIO 1 DISKW BJCL (FINIS STEM BJCL.)"
    ADDRESS TSO "FREE DDN(BJCL)"
    BOPEN= NO
    ADDRESS TSO "SUBMIT " DS5
    MSG2= "NOTE: YOU ARE IN ONLINE MODE, CMDS ARE ISSUED REAL TIME."
    CLEARMSG=YES
    MODE= "ONLINE"
    SECRC= "BATCH STREAM SUBMITTED FROM "DS5". MODE CHANGE COMPLETE."
    SIGNAL GOTMSG
  END
  IF (OPT = "SUB") & (MODE = "ONLINE") THEN  DO
    SECRC= "THE SUB OPTION IS VALID ONLY IN BATCH MODE."
    SECRC=  SECRC" OPTION IGNORED"
    SIGNAL GOTMSG
  END
  IF (OPT = "BATCH") & (MODE < > "BATCH") THEN  DO
    ADDRESS TSO "%"TVER"JCARD" DS5 "RANDOM"
    IF  RC = 16 THEN  DO
      SECRC="MODE CHANGE FAILED."
      SIGNAL GOTMSG
    END
    ADDRESS TSO " ALLOC DDN(BJCL) DSN(" DS5") MOD REUS"
    BOPEN = YES
    MSG2= "NOTE: YOU ARE IN BATCH MODE, MOST CMDS ARE DEFERRED "
    MSG2=   MSG2 "UNTIL MODE IS CHANGED."
    ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
    CLEARMSG=NO
    MODE = "BATCH"
    SECRC= "MODE CHANGE COMPLETE. JCL WILL BE IN "DS5"."
    SIGNAL GOTMSG
  END
  IF  (OPT = "ONLINE") & (MODE < > "ONLINE") THEN  DO
    BJCL.1 = "@@"
    ADDRESS MVS "EXECIO 1 DISKW BJCL (FINIS STEM BJCL.)"
    ADDRESS TSO " FREE DDN(BJCL)"
    BOPEN= NO
    MSG2= "NOTE: YOU ARE IN ONLINE MODE CMDS ARE ISSUED REAL TIME."
    CLEARMSG=YES
    MODE= "ONLINE"
    SECRC= "MODE CHANGE COMPLETE. JCL NOT SUBMITTED, IS IN "DS5"."
    SIGNAL GOTMSG
  END
  IF  (OPT = "ONLINE") & (MODE = "ONLINE") THEN  DO
    MSG2= "NOTE: MODE IS UNCHANGED."
    CLEARMSG=YES
    MODE= "ONLINE"
    SECRC= "NO CHANGES MADE. MODE WAS AND IS STILL ONLINE."
    SIGNAL GOTMSG
  END
  IF  OPT = "CMDO" THEN  DO
  /*OTT = OUTTRAP(ZZT,0)     TRAP EVERYTHING */
    DATAAREA =  ACID
    ARG =  DATAAREA
   " ISPEXEC VPUT ARG PROFILE"
   ADDRESS TSO "%"TVER"CMDO" DS1
    FUNCT= "CMDOUT"
    SIGNAL GETMSG
  END
  /***************************************************************/
  /** THE FOLLOWING OPTIONS USE THE T..TSO ROUTINE FOR CHANGING **/
  /** THE TOP SECRET TSO DEFINITIONS.  THE T44TSO ROUTINE       **/
  /** REQUIRES THE FOLLOWING PARMS :  ACTION ACID LPROC ACCTNUM **/
  /** UNIT SIZE DESPITE THE FACT ALL THESE MAY NOT BE USED FOR  **/
  /** EACH FUNCTION I PASS THEM ALL EACH TIME AS THEY ARE       **/
  /** POSITIONALLY DEPENDANT...DIR 2 JUNE 94                    **/
  /***************************************************************/
  /***************************************************************/
  /** THE END OF THE T44TSO AREA                                **/
  /***************************************************************/
  IF  OPT = "DELBOOK"   THEN  DO
    MAXCC = 0
    FUNCT = "DELBOOK# "
    BOOKS = WORDS(DATA)
    IF DATATYPE(DATA) < > "NUM" THEN DO
      MSG = " ONE NUMERIC BOOK NUMBER MUST BE GIVEN, RESPECIFY"
      CURSOR = "DATA"
      SIGNAL REDO
    END
    IF  MODE = "BATCH" THEN DO
      DO X5 = 1 TO BOOKS
        BOOK = WORD(DATA,X5)
        BJCL.1 = "%TSSDBOOK "ACID DATA
        ADDRESS MVS "EXECIO 1 DISKW BJCL (FINIS STEM BJCL.)"
      END
      TRACE OFF
      SIGNAL NOMSG
    END
    DO X5 = 1 TO BOOKS
      BOOK = WORD(DATA,X5)
      ADDRESS TSO "%TSSDBOOK " ACID DATA
    END
    /*OTT = OUTTRAP("OFF")     TRAP NOTHING.          */
    SIGNAL NOMSG
  END
  IF  OPT = "BOOK"   THEN  DO
    MAXCC = 0
    FUNCT = "BOOK#  "
    UNIT= "IMSDA"
    PROC = DATA2
    IF DATA2 = " " THEN
      PROC = "SPFLOGON"
    IF DATATYPE(WORD(DATA,1)) < > "NUM" THEN DO
      MSG = " ONE NUMERIC BOOK NUMBER MUST BE GIVEN, RESPECIFY"
      CURSOR = "DATA"
      SIGNAL REDO
    END
    BOOKS = WORDS(DATA)
    IF  MODE = "BATCH" THEN DO
      DO X5 = 1 TO BOOKS
        BOOK = WORD(DATA,X5)
        BJCL.1 = "%TSSBOOK "ACID PROC BOOK
        ADDRESS MVS "EXECIO 1 DISKW BJCL (FINIS STEM BJCL.)"
      END
      TRACE OFF
      SIGNAL GETMSG
    END
    /* OTT = OUTTRAP(ZZT,0)     TRAP EVERYTHING */
    DO X5 = 1 TO BOOKS
      BOOK = WORD(DATA,X5)
      ADDRESS TSO "%TSSBOOK " ACID  PROC BOOK
    END
    /*OTT = OUTTRAP("OFF")     TRAP NOTHING.          */
    SIGNAL GETMSG
  END
  IF  OPT = "POPTEST" THEN  DO
    FUNCT =  "POPTEST"
    TITLE  = "TEST SCREEN TITLE       "
    TITLE1 = "#BOOK TO BE DELETED       "
    VNAME1 = "THIS IS THE BOOK SPOT     "
    CALL DISPPOP
    SAY V1 V2 V3 V4 V5 V6
  END
  IF  OPT = "REPPROF" THEN  DO
    FUNCT =  "REPPROF"
    HOLD = NO
    DATAP = TRANSLATE(DATA,"."," ")
    IF  MODE = "BATCH" THEN  DO
     BJCL.1 = "ISPSTART CMD(%"TVER"GREP" ACID DATAP HOLD") NEWAPPL(TSS)"
      ADDRESS MVS "EXECIO 1 DISKW BJCL (FINIS STEM BJCL.)"
      SIGNAL NOMSG
    END
    ADDRESS TSO "%"TVER"GREP" ACID DATA HOLD
    SIGNAL GETMSG
  END
  IF  WORD(OPT,1) = "UP" THEN        DO
    WORD2 = WORD(OPT,2)
    IF DATATYPE(WORD2) = "NUM" THEN THISREC = THISREC - WORD2
    ELSE THISREC = THISREC - 11
    Y = 0
    IF THISREC > MAXREC THEN THISREC = MAXREC
    IF THISREC < 1 THEN THISREC = 1
    TGT = THISREC + 10
    OPT     = " "
    SIGNAL DISPPNL
  END
  IF  WORD(OPT,1) = "DOWN" THEN      DO
    WORD2 = WORD(OPT,2)
    IF DATATYPE(WORD2) = "NUM" THEN THISREC = THISREC - WORD2
    ELSE THISREC = THISREC + 11
    Y = 0
    IF THISREC > MAXREC THEN THISREC = MAXREC
    IF THISREC < 1 THEN THISREC = 1
    TGT = THISREC + 10
    OPT     = " "
    SIGNAL DISPPNL
  END
  IF OPT = "AD" THEN OPT = "ADD"
  HUH: NOP
  SECRC= "I DID NOT RECOGNIZE THE OPTION YOU ENTERED."    OPT
  SIGNAL GOTMSG
  GETMSG: NOP
  ADDRESS ISPEXEC "VGET SECRC PROFILE"
  ADDRESS ISPEXEC "VGET MSG2 PROFILE"
  SIGNAL GOTMSG
  NOMSG: NOP
  SECRC= "FUNCTION COMPLETED SUCCESSFULLY."
  IF RCODE >  0 THEN
    SECRC=  "FUNCTION COMPLETED WITH A RETURN CODE OF"     RCODE
  IF RCODE =  8 THEN  DO
    SECRC=  "THE ACID ( "ACID") IS INVALID"
    SECRC=   SECRC "OR AUTHORIZATION FAILED."
  END
  GOTMSG: IF (OPT < > "L") & (OPT < > "IN"),
    & (MODE < > "BATCH") THEN OPT =   " "
  MSG = SECRC
  ADDRESS ISPEXEC "VPUT MSG2 PROFILE" /* IN CASE I SET A MSG */
  SYSOUTTRAP= TRAPNUM
  /******************************************************************/
  /* NOMSG IS THE JUMP TO POINT (JTP) FOR FUNCTIONS THAT  DO NOT    */
  /* RETURN A MESSAGE IN VAR SECRC. GETMSG IS FOR OTHERS THAT DO    */
  /*   ......DAVE 9 APRIL 91                                        */
  /* NOTE THAT YOU MUST SAVE THE RC IN VARIABLE RCODE FOR JTP       */
  /* NOMSG....DAVE 9 APRIL 91                                       */
  /******************************************************************/
  REDO: RCODE=0 /*A JTP TO KEEP OPTION */
  ADDRESS ISPEXEC "VPUT SECRC PROFILE" /* IN CASE I SET A MSG */
  MSG =    FUNCT ":" MSG
SIGNAL DISPPNL
/*******************************************************************/
/** END OF SEQUENTIAL INSTRUCTIONS                                **/
/*******************************************************************/
DISPPOP: NOP
ADDRESS ISPEXEC "ADDPOP POPLOC(OPT) "
ADDRESS ISPEXEC "DISPLAY PANEL(SECPOP)"
ADDRESS ISPEXEC "REMPOP"
RETURN
SHUCKS: PROCEDURE EXPOSE RC PNL_DISP PANEL MSG SIGL DEFPNL RCODE,
  BOPEN OPT ACID DS1 DS2 DS3 DS4 DS5 DEF DS6 SECRC TRAP_FLAG,
  TVER LEAVE CMDTABLE SCRTABLE
  RCODE = RC
  IF TRAP_FLAG = "NO" THEN
    SAY " ERROR ROUTINE HAS BEEN SIGNALED BY LINE" SIGL
  IF RCODE = 0 THEN LEAVE = "YES"
  RC = 0
  "ISPEXEC VPUT ACID PROFILE"
  ERRORL = SIGL
  PANELRC = 0
  /* SAY "LINE # " ERRORL "CAUSED AN ERROR" */
  IF RCODE = 24 THEN EXIT 24 /* APPL PARM ERROR IN TSSINI */
  IF RCODE = 8 THEN DO
    IF PNL_DISP = "YES" THEN DO
      IF PANEL = "SPIUTIL" THEN LEAVE = YES
      IF PANEL = "SPIUSER" THEN LEAVE = YES
      IF PANEL = DEFPNL THEN LEAVE = YES
    END
  END
  PANEL = DEFPNL
  ADDRESS ISPEXEC "VPUT PANEL PROFILE"
  OPT = "NIL"
  MSG = "FUNCTION RETURNED A RETURN CODE OF " RCODE
  IF RCODE = -3 THEN DO
    MSG = "POSSIBLE ENVIRONMENTAL ERROR. CHECK TVER SETTING"
    SECRC = "POSSIBLE ENVIRONMENTAL ERROR. CHECK TVER SETTING"
    "ISPEXEC VPUT SECRC PROFILE"
  END
  IF LEAVE = "YES" THEN DO
    IF BOPEN = "YES" THEN DO
      BJCL.1 =  "@@"
      ADDRESS MVS "EXECIO 1 DISKW BJCL (FINIS STEM BJCL.)"
      ADDRESS TSO "FREE DDN(BJCL)"
      BOPEN = "NO"
    END
    "ISPEXEC VPUT TVER PROFILE "
    "ISPEXEC VPUT DS1 PROFILE  "
    "ISPEXEC VPUT DS2 PROFILE  "
    "ISPEXEC VPUT DS3 PROFILE  "
    "ISPEXEC VPUT DS4 PROFILE  "
    "ISPEXEC VPUT DS6 PROFILE  "
    "ISPEXEC VPUT DS5 PROFILE  "
    "ISPEXEC VPUT DEF PROFILE  "
    SIGNAL OFF ERROR
    "ISPEXEC TBEND "CMDTABLE
    "ISPEXEC TBEND "SCRTABLE
     EXIT
  END
  RETURN
NOTABLE: PROCEDURE EXPOSE RC SIGL CMDTABLE SCRTABLE TABLEOPT
  ERRORL = SIGL
  SAY "LINE # " ERRORL "INVOKED ERROR RECOVERY"
  SAY "*********************************************************"
  SAY "** FATAL ERROR FATAL ERROR FATAL ERROR FATAL ERROR     **"
  SAY "*********************************************************"
  SAY "TSSUT: AN OPEN WAS ISSUED FOR ONE OR MORE TABLES THAT DO "
  SAY "       NOT EXIST. OR ARE ALREADY OPEN !                  "
  SAY "       USE THE TBMCMD OR TBMSCR TO CREATE TABLES:"
  SAY "       " CMDTABLE SCRTABLE
  SAY "*********************************************************"
  IF TABLEOPT= "PERM" THEN DO
    TABLEOPT = "TEMP"
    ADDRESS ISPEXEC "VPUT TABLEOPT PROFILE"
    SAY "*********************************************************"
    SAY " I AM CHANGING TABLE OPTION TO TEMP, PLEASE REINVOKE     "
    SAY " THE PANEL SYSTEM TO READ   TABLES FROM FLATFILE INPUT.  "
    SAY " CONFIRM THAT YOU ARE CORRECTLY SET UP TO USE PERMANENT  "
    SAY " TABLE INPUTS. THE TABLE NAMES ARE BELOW.                "
    SAY "       " CMDTABLE SCRTABLE
    SAY "*********************************************************"
  END
  EXIT
NEWINI: PROCEDURE EXPOSE RC SIGL MSG2 CLEARMSG AUTOINIT NEEDINIT RCODE
  RCODE = RC
  RC = 0
  ERRORL = SIGL
  PANELRC = 0
  SAY "LINE # " ERRORL "INVOKED ERROR RECOVERY"
  IF RCODE = 8 THEN DO
    MSG2 = "$$ WARNING: TSSINI VARIABLES NOT FOUND. LINE " SIGL
    MSG2 = MSG2 "A 'REINIT' SHOULD BE ISSUED."
    ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
    CLEARMSG = "NO"
    IF AUTOINIT ¬= "NO" THEN DO
      INI = "NO"
      "ISPEXEC VPUT INI PROFILE"
      NEEDINIT = "YES"  /* TELL MAIN ROUTINE TO REINIT */
      MSG2 = "$$ NOTE: VARIABLES NOT FOUND. TSSINI WAS REINVOKED"
      MSG2 = MSG2 "TO REBUILD YOUR ENVIRONMENT"
      ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
    END
  END
  OPT = " "
  RETURN
PTR:
  ARG VALUE
  RETURN X2C(C2X(STORAGE(D2X(VALUE),4)))
