/* Rexx */
LOG:
/**********************************************************/
/** This function maintains stem variables automatically.**/
/** It accepts three parms:                              **/
/** Dataarea - A string which can contain a number       **/
/**            for the INIT function, or a message for   **/
/**            the APPEND function, or a DDNAME for the  **/
/**            DUMP function.                            **/
/** Logname -  The name you use to refer to a log, must  **/
/**            be a valid REXX variable name.            **/
/** Function - INIT to initialize  a log                 **/
/**            APPEND to append to a log                 **/
/**            DUMP to write the log to a DDNAME         **/
/**            WRITE to write the log to the screen      **/
/**            DELETE to delete the log                  **/
/**            PURGE to clear all the data from a log    **/
/**                                                      **/
/**********************************************************/
  dataarea = arg(1)
  logname  = arg(2)
  funct    = arg(3)
  upper funct logname
  if funct = "" then funct = "APPEND"  /* the default option */
  Select
    when funct = "INIT" then do
      upper dataarea
      /* log(100,debug,init) */
      log.logname.0max = dataarea
      if datatype(dataarea) /= "NUM" then return 4
      return 0
      /* above inits a new log var */
    end
    when funct = "APPEND" then do
      /* log(my log dataarea) */
      /* log(my log dataarea,debug,append) */
      if logname = "" then logname = "DEBUG" /* the default log */
      if datatype(log.logname.0) /= "NUM" then log.logname.0 = 0
      if datatype(log.logname.0max) /= "NUM" then do
        say "LOG002E: Uninitialized log variable"
        say "         You must init a log variable before use."
        return 12
      end
      hold = log.logname.0 + 1
      if hold > log.logname.0max then log.logname.0wrap = "YES"
      if hold > log.logname.0max then hold = 1
      /* if we are at max then start at #1 again */
      log.logname.hold = dataarea
      log.logname.0 = hold     /* update the tracker subscript */
      hold = hold + 1
      log.logname.hold = "_____________"
      return 0
    end
    when funct = "PURGE" then do
      /* log(,debug,purge) */
      /* keep the stream but delete the contents */
      savemax = log.logname.0max
      log.logname. = ""
      log.logname.0max = savemax
      log.logname.0 = 0         /* reset my array */
      return 0
    end
    when funct = "DELETE" then do
      /* log(,debug,delete) */
      /* as if it never existed */
      log.logname. = ""
      return 0
    end
    when funct = "DUMP" then do
      /* log(ddname,debug,dump) */
      ddname = dataarea
      lines = log.logname.0
      stem = "log."logname"."
      savemax = log.logname.0max
      if log.logname.0wrap = "YES" then lines = log.logname.0max
      if datatype(log.logname.0) /= "NUM" then log.logname.0 = 0
      /* above inits a new log var */
      ADDRESS MVS "EXECIO "lines" DISKW "ddname" ( FINIS STEM "stem")"
      /* log.logname. = ""
      log.logname.0max = savemax
      log.logname.0 = 0            reset my array */
      return 0
    end
    WHEN FUNCT = "WRITE" THEN DO
      /* log(,debug,WRITE) */
      if datatype(log.logname.0) /= "NUM" then log.logname.0 = 0
      lines = log.logname.0
      stem = "log."logname"."
      if log.logname.0wrap = "YES" then lines = log.logname.0max
      do w = 1 to lines
        say log.logname.w
      end
      return 0
    end
    otherwise return 4
   End
