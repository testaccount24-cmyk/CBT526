                      /* Generic ISPF table viewer ( REXX ) */
 /* CHANGE for retain */
 arg tblname retain
 if datatype(retain) /= "NUM" then retain = 0
 retained_cols_width = 0
 /**********************************************************/
 /** the retain parm specifies how many of the key fields **/
 /** to propagate to each screen starting on the left.    **/
 /**********************************************************/
 /* END CHANGE for retain */
 Address ISPEXEC "CONTROL ERRORS RETURN"
         /* Phase 1 - query the table, capture variable names */
 Address ISPEXEC "TBQUERY" tblname "KEYS(KEYS) NAMES(NAMES)",
 "KEYNUM(KEYNUM) NAMENUM(NAMENUM)"
 if rc > 0 then do
   say  "TSA101D: TBQUERY failed, check that table name is valid."
   say  "TSA101D: If this is a screen table insure you are in expert"
   say  "TSA101D: mode."
   exit 12
 end
 keys  = strip(keys,l,'(')  ; keys  = strip(keys,t,')')
 names = strip(names,l,'(') ; names = strip(names,t,')')
 varnum = keynum + namenum
 allvars = keys names   /* chain keys and names together    */
 do col = 1 to varnum   /* arrays of column headings, widths*/
   name.col = word(allvars,col)     /* name of the variable */
   hdw.col  = length(name.col)             /* width of name */
   dwid.col = 0                  /* max width of data found */
 end
     /* Phase 2 - Review the table for data displayed widths --
        currently fixed to max out at zscreenw-1 (usually 79) */
 Address ISPEXEC "VGET ZSCREENW"
 maxwid = zscreenw - 1     /* need one for attribute byte */
 Address ISPEXEC "TBTOP" tblname
 tbrc = 0
 do while tbrc = 0
   Address ISPEXEC "TBSKIP" tblname
   tbrc = rc
   if tbrc = 0 then do col = 1 to varnum
     if length(value(name.col)) > dwid.col
     then dwid.col = length(value(name.col))
   end
 end
     /* Phase 3 - Set reserved width, headings for each
                     column, and use to build screen widths. */
 maxscr = 1
              /* total screens required to display all columns */
 modhdrs = '' ; modvars = '' ; mdzvars = ''
 cols_this_screen = 0          /* what's been used so far */
 /*********************/
 /* CHANGE for retain */
 /*********************/
 do ky = 1 to retain
   if dwid.ky = 0   then dwid.ky = 1
   if dwid.ky > maxwid then dwid.ky = maxwid
   grtrwid  = max(hdw.ky,dwid.ky)
   /***********************/
   /* we got the biggest  */
   /***********************/
   rsvd.ky = 1 + grtrwid       /* one space between columns */
   retained_cols_width = retained_cols_width + rsvd.ky
 end
 /*********************/
 /* END CHANGE retain */
 /*********************/
 maxwid = maxwid - retained_cols_width
 do col = 1 to varnum
   /***********************/
   /* hwid = header width */
   /* dwid = Data width   */
   /***********************/
   if dwid.col = 0  then dwid.col = 1
   if dwid.col > maxwid then dwid.col = maxwid
   grtrwid  = max(hdw.col,dwid.col)
   /***********************/
   /* we got the biggest  */
   /***********************/
   rsvd.col = 1 + grtrwid      /* one space between columns */
   hdng.col = ' ' || center(name.col,grtrwid,'-')
   /**********************************************/
   /* the literal for the column header is above */
   /**********************************************/
   if cols_this_screen + rsvd.col > zscreenw then do
     /*****************************************/
     /* starting a new screen for this column */
     /*****************************************/
     modhdr.maxscr = modhdrs     /* save prior screen formats */
     modvar.maxscr = modvars
     mdzvar.maxscr = mdzvars
     modhdrs = '' ; modvars = '' ; mdzvars = ''
     maxscr = maxscr + 1              /* begin a new screen */
     cols_this_screen = 0
   end
   /*********************/
   /* CHANGE for retain */
   /*********************/
   if (cols_this_screen = 0) & (maxscr > 1 ) then do ky = 1 to retain
     /*********************************/
     /* we  propogate the primary keys*/
     /* to every screen  dir 25 mar 99*/
     /*********************************/
     modhdrs = modhdrs || hdng.ky
     /********************************/
     /* below we mark the key fields */
     /********************************/
     if ky <= keynum then marker = left('@z',dwid.ky +1)
       else marker = left('\z',dwid.ky +1)
     modvars = modvars || center(marker, rsvd.ky)
     mdzvars = mdzvars name.ky
     cols_this_screen = cols_this_screen + rsvd.ky
     /*                                        */
     /*say "CUSTOM"                            */
     /*say "retcols = " retained_cols_width    */
     /*say "colthis = " cols_this_screen       */
     /*say "modvars = " modvars                */
     /*say "mdzvars = " mdzvars                */
     /*say "modhdrs = " modhdrs                */
   end
 /*********************/
 /* END CHANGE retain */
 /*********************/
   modhdrs = modhdrs || hdng.col
   /********************************/
   /* below we mark the key fields */
   /********************************/
   if col <= keynum then marker = left('@z',dwid.col+1)
     else marker = left('\z',dwid.col+1)
   modvars = modvars || center(marker, rsvd.col)
   mdzvars = mdzvars name.col
   cols_this_screen = cols_this_screen + rsvd.col
 end
 modhdr.maxscr = modhdrs   /* save the last screen format */
 modvar.maxscr = modvars
 mdzvar.maxscr = mdzvars
      /* Phase 4 - Display the table using prepared screens. Saves and
           sets 4 pkfeys to allow left and right scrolling effect. */
 Address ISPEXEC "VGET (ZPF10 ZPF11 ZPF22 ZPF23) PROFILE"
 spf10 = zpf10 ; spf11 = zpf11 ; spf22 = zpf22 ; spf23 = zpf23
 zpf10 = 'TLEFT' ; zpf11 = 'TRIGHT'
 zpf22 = 'TLEFT' ; zpf23 = 'TRIGHT'
 Address ISPEXEC "VPUT (ZPF10 ZPF11 ZPF22 ZPF23) PROFILE"
 curscrn = 1
 crp = 1
 call load_screen_vars
 viewrc = 0
 do while viewrc < 8
   Address ISPEXEC "TBTOP" tblname
   Address ISPEXEC "TBSKIP" tblname "NUMBER("crp")"
   /*                 */
   /*say "modhdrs"    */
   /*say modhdrs      */
   /*say "******"     */
   /*say "modvars"    */
   /*say modvars      */
   /*say "******"     */
   /*say "mdzvars"    */
   /*say mdzvars      */
   /*say "******"     */
   Address ISPEXEC "TBDISPL" tblname "PANEL(TBVIEW)"
   viewrc = rc
   /*Say "viewrc is " viewrc */
   /*Say "zcmd is " zcmd        */
   if viewrc < 8  then do
     crp = ztdtop
     if zcmd = 'TRIGHT' then do
       curscrn = curscrn + 1
       if curscrn > maxscr then curscrn = 1
       call load_screen_vars
     end
     If zcmd = 'TLEFT' then do
       curscrn = curscrn - 1
       if curscrn = 0  then curscrn = maxscr
       call load_screen_vars
     end
   end
 end
 zpf10 = spf10 ; zpf11 = spf11 ; zpf22 = spf22 ; zpf23 = spf23
 Address ISPEXEC "VPUT (ZPF10 ZPF11 ZPF22 ZPF23) PROFILE"
 Ending:
 Return
 load_screen_vars :
                 /* moves current screen formats to actives */
 /* say "LOAD:" curscrn "is CURSCRN"  */
 modhdrs = modhdr.curscrn
 modvars = modvar.curscrn
 mdzvars = mdzvar.curscrn
 Return
