/*REXX*/
/***********************************************************/
/** THIS EXEC SCANS A LIST OF DATASETS TO FIND WHETHER    **/
/** OR NOT A CERTAIN MEMBER EXISTS IN THAT LIST. IT IS    **/
/** VERY HANDY FOR LOCATING AN APF AUTH'D MODULE IN THE   **/
/** APF LIST AS AN EXAMPLE!!...........     24 MAR 98     **/
/***********************************************************/
SAY "__________________________________________________________"
SAY "__   Memlook version 3 invoked, masking is supported    __"
SAY "__________________________________________________________"
SAY "__ TSO %MEMLOOK checklist memmask                       __"
SAY "__ Some supported values for checklist are :            __"
SAY "__ HELP/DD=ddname/APF/LINK/LPA                          __"
SAY "__________________________________________________________"
ARG THEDSN MEMNAME
ADDRESS ISPEXEC "VGET ZSYSID"
sysid = zsysid
suffix = 00
IF SYSID = "SYSA" THEN SUFFIX = "00"
IF SYSID = "SYSB" THEN SUFFIX = "0B"
IF SYSID = "SYSC" THEN SUFFIX = "0C"
IF THEDSN = "PROC" THEN PROC  = "YES"
ALIASN.1 = "CLIST"    ; ALIASD.1 = "TECH.SCA.CPROC(CLIST)"
ALIASN.2 = "PANELS"   ; ALIASD.2 = "TECH.SCA.CPROC(PANELS)"
ALIASN.3 = "CLISTMSN" ; ALIASD.3 = "TECH.MSN.DATA(CLIST)"
ALIASN.4 = "PANELMSN" ; ALIASD.4 = "TECH.MSN.DATA(PANELS)"
ALIASN.5 = "MSN"      ; ALIASD.5 = "TECH.MSN.DATA(MEMLOOK)"
ALIASN.6 = "APF"      ; ALIASD.6 = "SYS1.PARMLIB(IEAAPF"SUFFIX")"
ALIASN.7 = "LPA"      ; ALIASD.7 = "SYS1.PARMLIB(LPALST"SUFFIX")"
ALIASN.8 = "LINK"     ; ALIASD.8 = "SYS1.PARMLIB(LNKLST"SUFFIX")"
ALIASN.9 = "PROC"     ; ALIASD.9 = "SYS1.PROCLIB(JES2)"
ALIASN.10 = "NETEX"    ; ALIASD.10 = "TECH.SCA.CPROC(NETEX)"
ALIASN.11 = "HCD"    ; ALIASD.11 = "TECH.DAVER.CMDPROC(HCD)"
ALIASN.0 = 11
IF THEDSN= "HELP" THEN DO
  SAY "    Just provide a DSName that contains a DSN list in the   "
  SAY "    first parm and the member name or mask in the second.    "
  SAY "                                                             "
  SAY "    You may also specify a DDNAME currently allocated in the "
  SAY "    format: DD=xxxxxxx or DD=ALL (for all DDNames allocated) "
  SAY "                                                             "
  SAY "    You may also specify a JCL stream in the format:         "
  SAY "    JCL=xxxx.xxxx.xxxx ( a dsname with JCL in it)            "
  SAY "                                                             "
  SAY "    Or you can provide a recognized alias they are :         "
  DO Q = 1 TO ALIASN.0
    hold = substr(aliasn.q,1,9)
    SAY hold "=" ALIASD.Q
  END
  EXIT 00
END
DO Q = 1 TO ALIASN.0
  if thedsn = aliasn.q then say "Alias resolved to" aliasd.q
  if thedsn = aliasn.q then thedsn = aliasd.q
END
MEMNAME = STRIP(MEMNAME)
LEAD_GENERIC = "NO"
IF SUBSTR(MEMNAME,1,1) = "*" THEN DO
  LEAD_GENERIC = "YES"
  MEMNAME = SUBSTR(MEMNAME,2)
END
LENGTH_MEMNAME = LENGTH(MEMNAME)
IF SUBSTR(MEMNAME,LENGTH_MEMNAME,1) = "*" THEN DO
  GENERIC = "YES"
  MEMNAME = STRIP(TRANSLATE(MEMNAME," ","*"))
  MEMMAX  = MEMNAME||"99999999"
  MEMMAX  = SUBSTR(MEMmax,1,8)
END
IF THEDSN = " " THEN DO
  say "Memlook parameters not provided, Memlook terminating."
  EXIT 00
END
MEMNAME = STRIP(MEMNAME)
THEDSN = TRANSLATE(THEDSN," ","'") /* REPLACE TICS WITH SPACES */
SUFFIX = "00"
OPT = THEDSN
SYSID= ZSYSID
/* ADDRESS TSO "CLR3270"*/
IF INDEX(THEDSN,"JCL=") = 1 THEN DO
  PROC = "YES"
  THEDSN = SUBSTR(THEDSN,5)
END
/*IF THEDSN = "JCLCA7" THEN THEDSN = "TECH.SCA.CPROC(JCLCA7)"      */
/*IF THEDSN = "CLIST" THEN THEDSN = "TECH.SCA.CPROC(CLIST)"        */
/*IF THEDSN = "CLISTMSN" THEN THEDSN = "TECH.MSN.DATA(CLIST)"      */
/*IF THEDSN = "PANELS" THEN THEDSN = "TECH.SCA.CPROC(PANELS)"      */
/*IF THEDSN = "PANELMSN" THEN THEDSN = "TECH.MSN.DATA(PANELS)"     */
/*IF THEDSN = "MSN" THEN THEDSN = "TECH.MSN.DATA(MEMLOOK)"         */
/*IF THEDSN = "APF" THEN  THEDSN = "SYS1.PARMLIB(IEAAPF"SUFFIX")"  */
/*IF THEDSN = "LPA" THEN  THEDSN = "SYS1.PARMLIB(LPALST"SUFFIX")"  */
/*IF THEDSN = "LINK" THEN THEDSN = "SYS1.PARMLIB(LNKLST"SUFFIX")"  */
/*IF THEDSN = "PROC" THEN PROC  = "YES"                            */
/*IF THEDSN = "PROC" THEN THEDSN = "SYS1.PROCLIB(JES2)"            */
ENDLINE = 0
RCODE = 0
COMMA = ","
CALL ON ERROR NAME OOPS
IF INDEX(THEDSN,"DDN=") = 1 THEN
  THEDSN = "DD="||SUBSTR(THEDSN,5)
IF INDEX(THEDSN,"DD=") = 1 THEN DO
  THEDDN = SUBSTR(THEDSN,4)
  C = OUTTRAP('INLINE.')
  ADDRESS TSO "%WHATDDX" THEDDN
  C = OUTTRAP(OFF)
  INLINE.1 = "ALLOCATED TO YOUR TSO DDNAME OF " THEDDN
END
ELSE DO
  address tso "ALLOC DDN(TEMP1) DSN('"THEDSN"') SHR REUS"
  "EXECIO * DISKR  TEMP1 (FINIS STEM INLINE.)"
  "FREE DDN(TEMP1)"
END
GOTDATA: NOP
SAY " "
say "Input has been read in Dataset: " thedsn
say "Input dsn has specified "inline.0 "datasets to be checked"
SAY " "
HOLD = INLINE.0
IF OPT = "LPA" THEN DO
  HOLD = HOLD + 1
  INLINE.HOLD = "SYS1.LPALIB"
  HOLD = HOLD + 1
  INLINE.HOLD = "SYS1.NUCLEUS"
  INLINE.0   = INLINE.0 + 1
END
IF OPT = "LINK" THEN DO
  HOLD = HOLD + 1
  INLINE.HOLD = "SYS1.LINKLIB"
  INLINE.0   = INLINE.0 + 1
END
DO X = 1 TO INLINE.0
  LINE = SUBSTR(INLINE.X,1,60)
  LINE = TRANSLATE(LINE," ",",") /* REPLACE COMMA WITH SPACES */
  IF PROC = "YES" THEN DO
    IF INDEX(LINE,"DSN=") = 0 THEN ITERATE X
    PARSE VAR LINE WITH GARBAGE "DSN=" LINE DROPOFF
    IF INDEX(LINE,"&") <> 0 THEN ITERATE X
  END
  say "Checking Dataset " line
  DS.X = WORD(LINE,1)
  IF DS.X = "ALLOCATED" THEN ITERATE X
  IF DS.X = "/*" THEN ITERATE X
  IF SYSDSN("'"DS.X"'") /= "OK" THEN
      SAY "****  DSNAME "ds.x" is not accessable"
  IF SYSDSN("'"DS.X"'") /= "OK" THEN iterate x
  /* SAY "LEAD_GENERIC = " LEAD_GENERIC*/
  IF GENERIC = "YES" THEN DO
    Q = OUTTRAP("MEMBER.")
    ADDRESS TSO "LISTDS   '"DS.X"' MEMBERS"
    DO XX = 7 TO MEMBER.0
      IF LEAD_GENERIC = "YES" THEN DO
        /*************************************************/
        /** Above line checks to see if we are past the **/
        /** last possible match in a dsn..dir 12 may 97 **/
        /*************************************************/
        IF INDEX(STRIP(MEMBER.XX),MEMNAME) > 0 THEN DO
          SAY "**** MEMBER "MEMBER.XX" WAS FOUND IN DSNAME" DS.X
          GOTIT = "YES"
        END
      END
      IF LEAD_GENERIC = "NO" THEN DO
        IF INDEX(STRIP(MEMBER.XX),MEMNAME) = 1 THEN DO
          SAY "**** MEMBER "MEMBER.XX" WAS FOUND IN DSNAME" DS.X
          GOTIT = "YES"
        END
      END
    END
  END
  ELSE DO
    IF SYSDSN("'"DS.X"("MEMNAME")'") = OK THEN DO
      SAY "****  MEMBER "MEMNAME" WAS FOUND IN DSNAME" DS.X
      GOTIT = "YES"
    END
  END
END
IF GOTIT = "YES" THEN EXIT
say "No Datasets were found that contained member" memname
