/*REXX */
ARG ID
ADDRESS TSO "ADDALIAS "ID "CATALOG.MVSICF1.VTSO001",
  "CATALOG.MVSICFM.VCO2MC1 PWUPDATE"
say "T50ICOMP: in control with parms " function acidlist
say "T50ICOMP: Maint = " maint
say "T50ICOMP: retrieving profile variables "
    say "T50ICOMP: calling jobcard function. "
  say "Output DSN unusable, data written to screen "
  say "Resource processing started"
    say "T50ICOMP: bypass option specified, allocating input dsn"
    say "T50ICOMP: total acids contained in input DSN is " acidnum
  say "T50ICOMP: bypass option specified, allocating input dsn"
  say "T50ICOMP: total acids contained in input DSN is " acidnum
    SAY  "Unique ACID RDT not supported. Function aborted."
        say "T50ICOMP: Segment changed to "segment "for " name
      say "In duplicate loop" concat prev_type prev_resource hold
        say "T50ICOMP: Mult key "name "==>" prev_type prev_resource hold
      say "T50ICOMP: Mult keys" prev_type prev_resource " is now " tz1
      say "         " prev_type prev_resource hold duplicat
        say "T50ICOMP: Concat rule ",
    say "LISTDUP:"name "duplicate keysets" aciddup.name.0
      say " "
      say " LISTDUP:"name "keyset=" type resource
      say " LISTDUP: primary:" prime
        say listdup.dupnum
    say "T50ICOMP: starting to process ACID:" x ">"name"<"
    say "          Rules#:" acidrul.name.0
    say cvtcmd.z1
  say "T50ICOMP:  MODIFY starting to process ACID:" name
          say "MODIFY:segment type resource acidath.name.type.resource"
          say "      "hold
          say " calling convert for revoke stream"
          say "t50pmenu: secure routine failed access "
  say "leaving modify"
    say cvtcmd.z1
if function = "TRANSLATE" then say "**OUTPUTAREA**"
  say "**NEWACID** " name
    say next
      say "hold ="name type resource
      say "      " hold
      say "hold1="otherid type resource
      say "      " hold1
    say compare.cmpnum
    SAY "*********************************************************"
    say "T50ICOMP makeacid routine aborting due to lack of user type"
    SAY "T50ICOMP : acid = "name
    SAY "*********************************************************"
  say create.t1
say "CONIN "function segment ">"||inline||"<"
  say "input       dsn line "inline
  say "reformatted dsn line "inline
   say "convert: type ="type "res="resource "name="name
   say "convert: concat = " hold
say "Multi: =" multi
say "Stack: =" stack
  say "convert: output is now :" output
  say  "T50ICOMP: error in line "sigl
  say x
  say "FATAL ERROR."
  say "passed acidlist was unlistable, check validity of acid" acids.r
  say "and your TOP SECRET authority."
say secrc
  say "FATAL ERROR."
  say "Passed DSN was invalid, check validity of DSN" ds1
  say "and environment variables."
say secrc
say "Dumping acidrul array for " name
  say out "=" next
    say "modrule:parse hit #"modcnt" setting " target "to" gotit
    say "modrule:remaining line" hold
say "MODRULE:prepanel" l
say "Modrule: final conlist" conlist
