/** REXX                                                 **/
/**********************************************************/
/** EXEC NAME        : T50ADD                            **/
/** LAST MODIFIED    : 12 AUG 98                         **/
/**********************************************************/
/** CHANGED ACID VARIABLE MANIPULATION SO THAT THE ACID  **/
/** VARIABLE REMAINS A LITTLE MORE STABLE.               **/
/**                                .....DIR 19 AUGUST 96 **/
/**********************************************************/
/**********************************************************/
/** ADDED LOGIC TO DETERMINE IF ID HAS DSNS CATLGD IN    **/
/** MASTER CAT YET HAS NO ALIAS        DIR  11 MAY 95    **/
/**********************************************************/
/**********************************************************/
/**                                                      **/
/**----------------INPUT REQUIRED -----------------------**/
/** PASSED ARGS        VALID VALUES                      **/
/** ACID    : THE TSS ACID TO BE ADDED.                  **/
/** MODE    : BATCH OR ONLINE                            **/
/** ISPF VGETS         VALID VALUES                      **/
/** TO NUMEROUS TO MENTION LOTS OF TSSINI VALUES         **/
/**----------------OUTPUT PRODUCED-----------------------**/
/** VALID CONDITION CODES - 00                           **/
/** ISPF VARIABLES        - SECRC                        **/
/**                         DATAAREA                     **/
/**----------------REQUIREMENTS--------------------------**/
/** CAN RUN STANDALONE : NO                              **/
/** ISPF ENVIRONMENT   : YES                             **/
/** EXECS CALLED WITHIN THIS EXEC :         TSSAUDU      **/
/**                                                      **/
/**********************************************************/
ARG ACID MODE
SAY "T50ADD: CONTROL RECEIVED PARMS = " ACID MODE
ADDRESS ISPEXEC
"VGET AUD       PROFILE"
"VGET DEF       PROFILE"
"VGET DS1       PROFILE"
"VGET DS2       PROFILE"
"VGET DS3       PROFILE"
"VGET DS4       PROFILE"
"VGET DS5       PROFILE"
"VGET DS6       PROFILE"
"VGET MSG2      PROFILE"
"VGET PROD      PROFILE"
"VGET TSOSIZE   PROFILE"
"VGET TSOUNIT   PROFILE"
"VGET TSOPROC   PROFILE"
"VGET TVER      PROFILE"
SIGNAL OFF ERROR
/**********************************************************/
/** below i am checking that the id doesnot have dsns    **/
/** cataloged to the master catalog. if it does the      **/
/** user wont be able to catalog his own datasets. this  **/
/** will cause allocate errors that are hard to track.   **/
/** i may make this a seperate callable exec but for     **/
/** now it is included here    dave 11 may 95            **/
/**********************************************************/
DATEHOLD = DATE('U')
MONTHNUM = SUBSTR(DATEHOLD,1,2)
ADDRESS TSO "%T50GDAT "ACID "NAME"
OLDID = RC
BOOK = "NIL"
BOOK1 = "NIL"
SAY "TSA101D: T50ADD  EXISTANCE CHECK RC IS " OLDID
IF OLDID = 0 THEN DO
  MSG2 = "THIS ID EXISTS CURRENTLY, READDITION WILL FAIL UPON",
  "EXECUTION"
  ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
END
ADDRESS ISPEXEC "VGET TSOALIAS PROFILE"
IF TSOALIAS = "YES" THEN DO
  ADDRESS TSO "LISTC ENT('"ACID"')"
  SAY "TSA101D: T50ADD  ALIAS CHECK IS " RC
  ALIAS_CODE = RC
  ADDRESS TSO "LISTC LEVEL('"ACID"')"
  SAY "TSA101D: T50ADD  LEVEL CHECK IS " RC
  LEVEL_CODE = RC
  IF (ALIAS_CODE ¬= 0) & (LEVEL_CODE =0)  THEN DO
    MSG2 = "THE ID HAS NO ALIAS, YET HAS DSNS CATALOGED, EXPECT",
    "SEVERE ALLOCATION ERRORS"
    ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
  END
END
SIGNAL ON ERROR NAME ABORT
/**********************************************************/
/** END OF DSN ALIAS / LEVEL CHECKING                    **/
/**********************************************************/
LINE.  = " "
ALEN   = LENGTH(ACID)
BILLA  = "N"
CODE   = 0
CURSOR = "NAME"
DEFINE = "NAME('"NAME"') DEPT(D0000000) TYPE(USER)"
FIRST2 = SUBSTR(ACID,1,2)
GOTDEF = "NO"
LOGON  = TSOPROC
NDEPT  = FIRST2||"DEPT"
PROF   = " "
PWORD  = "PASSWORD,60,EXP"
SECDEF. = " "
SECRC  = "T50ADD DID NOT COMPLETE NORMALLY. PLEASE CHECK THE ID."
S2     = ALEN - 1
TYPE   =  "USER"
WARNED = "NO"
"VPUT SECRC PROFILE"
PW = "PASSWORD"
DPNL   = "SPIADD"
BASIC_ACID = " "
AUDU.0 =   1
AUDU.1 =   "%ADDLOCAL" ACID NDEPT
DEFINE = "NAME('"NAME"') DEPT("NDEPT") TYPE(USER)"
DEFINE = DEFINE "FAC(TSO,BATCH)"
/****************************************************/
/** the tso authority stream is below              **/
/****************************************************/
/*                                                                  */
/*batchtso.0 = 3                                                    */
/*batchtso.1 = " "                                                  */
/*batchtso.2 = "ISPSTART CMD(%"TVER"TSO DEFAULTS +"                 */
/*batchtso.3 = " "ACID LOGON BOOK1 TSOUNIT TSOSIZE") NEWAPPL(TSS)"  */
/*onlintso.0 = 1                                                    */
/*onlintso.1 ="%"TVER"TSO DEFAULTS" ACID LOGON BOOK1 TSOUNIT TSOSIZE*/
/*                                                                  */
/****************************************************/
/** beginning of the panel loop                    **/
/** beginning of the panel loop                    **/
/****************************************************/
AGAIN: NOP
CALL FILLSCR
"DISPLAY PANEL("DPNL")  CURSOR("CURSOR")"
RCODE = RC
NAME = TRANSLATE(NAME," ","'") /* REPLACE TICS WITH SPACES */
SAY "TSA101D: T50ADD  PANEL RCODE IS "RCODE
IF OPTION = "X" THEN SIGNAL ABORT
IF OPTION = "END" THEN SIGNAL ABORT
IF RCODE = 8 THEN SIGNAL ABORT
IF RCODE = 4 THEN SIGNAL ERRMSG
  /******************************************************/
  /******************************************************/
  /******************************************************/
  /******************************************************/
GETNAME: NOP
CNT1 = 0
NORMAL: NOP
MEMBER = mem
IF MEM = "" THEN MEMBER = NDEPT
mem = member
SAY "TSA101D: CHECKING FOR DEFAULT DEPT AUTHORITIES" DEF"("MEMBER")"
IF SYSDSN("'"DEF"("MEMBER")'") = "OK" THEN DO
  SAY "TSA101D: T50ADD  DEFAULT AUTHORITY GROUP FOUND FOR IN " DEF BIN
  ADDRESS TSO "ALLOC DDN(SECDEF) DSN('"DEF"("member")') SHR REUS"
  ADDRESS MVS "EXECIO * DISKR SECDEF ( FINIS STEM SECDEF.)"
  ADDRESS TSO "FREE DDN(SECDEF)"
  /******************************************************/
  /***                                                ***/
  /*** NOTE: THE FIRST LINE OF THE DSN MUST HAVE A    ***/
  /*** CREATE PARM IN IT! IF THERE IS NO MEMBER I     ***/
  /*** ASSIGN A VALUE TO SECDEF.1                     ***/
  /***                                                ***/
  /******************************************************/
  SECDEF.1 = "NAME('"NAME"')" SECDEF.1
  GOTDEF = "YES"
END
ELSE SECDEF.1 = DEFINE /* IF NO MEMBER WE JUST CREATE A 1 LINER */
DO T = 1 TO 15
  /******************************************************/
  /***                                                ***/
  /*** ONCE HERE THERE HAS TO BE A SECDEF.1 VALUE AND ***/
  /*** IT HAS IS    COMPRISED OF VALID 'CREATE' PARMS ***/
  /*** FOR TOP SECRET. THE REST OF THE SECDEF. STRING ***/
  /*** MAY CONTAIN commands to be issued by the       ***/
  /*** system sight unseen.                           ***/
  /******************************************************/
  if index(secdef.t,"$$") /= 0 then do
    say " t50add: $$ substitution string found in secdef"
    parse var secdef.t q1 '$$' q2
    secdef.t = q1||acid||q2
    say " t50add: resolved secdef is "secdef.t
  end
  if index(secdef.t,"$DEPT$") /= 0 then do
    say " T50ADD: $DEPT$ substitution string found in secdef"
    parse var secdef.t q1 '$DEPT$' q2
    secdef.t = q1||ndept||q2
    say " T50add: resolved secdef is "secdef.t
  end
  LINE.T =  secdef.t
END
SCRDISP: NOP
CALL FILLSCR
MSG="CHANGE DEFAULT COMMAND STREAM IF NEEDED AND HIT ENTER."
IF GOTDEF = "NO" THEN
  MSG="NO DEFAULT AUTHORITY STREAM FOUND. ENTER COMMANDS."
PNLDISP: NOP
"ISPEXEC DISPLAY PANEL("DPNL")"
RCODE = RC
SAY "T50ADD: PANEL RCODE IS "RCODE
IF MEM /= MEMBER THEN SECDEF. = " "
IF MEM /= MEMBER THEN SIGNAL NORMAL
NAME = SUBSTR(NAME                  ,1,20)
CALL FILLDOT
IF RCODE = 8 THEN SIGNAL ABORT
IF RCODE = 4 THEN SIGNAL ABORT
IF OPTION = "X" THEN SIGNAL ABORT
IF OPTION = "END" THEN SIGNAL ABORT
/******************************************************************/
/******************************************************************/
COMMIT: NOP
DEFINE = "NAME('"NAME"') DEPT("NDEPT") TYPE(USER)"
DEFINE = DEFINE "              "
LINE.1 = DEFINE
DO T1 = 1 TO 15
  IF LINE.T1 = " " THEN OUTCT = T1
  IF LINE.T1 = " " THEN LEAVE
END
IF PW ¬= " " THEN PWORD = PW||",45"
ELSE PW = "PASSWORD"
IF MODE = "BATCH" THEN DO
  SAY "T50ADD: BATCH MODE DETECTED. ALLOCATING " DS5 "TO BJCL DDN"
  ADDRESS TSO "ALLOC DDN(BJCL) DSN("DS5") MOD REUS"
  BJCL.1= "TSS CREATE("ACID")  PASSWORD("PWORD")      +"
  ADDRESS MVS "EXECIO 1 DISKW BJCL ( FINIS STEM BJCL.)"
  ADDRESS MVS "EXECIO "OUTCT" DISKW BJCL ( FINIS STEM LINE.)"
  /**********************************************************/
  /*ADDRESS MVS,                                               */
  /* "EXECIO "batchtso.0" DISKW BJCL ( FINIS STEM batchtso.)"  */

  SAY "T50ADD: WRITING DATA TO BJCL DDNAME"
  ADDRESS MVS "EXECIO * DISKW BJCL ( FINIS STEM AUDU.)"
  CODE = RC
  IF CODE = 0 THEN SECRC ="BATCH FILE UPDATED WITH ADD COMMANDS."
  SIGNAL OFF ERROR
  IF RC < > 0 THEN DO
    MSG2 = "THE BILLING FILE UPDATE DID NOT COMPLETE NORMALLY."
    ADDRESS ISPEXEC "VPUT MSG2 PROFILE"
  END
  SIGNAL BYE1
END
TSSCMD = "YES"
ADDRESS TSO
SAY "T50ADD: ISSUING THE TSS ADD COMMAND FOR THE ID"
SAY "T50ADD: TSS CREATE("ACID") PASSWORD("PWORD") " LINE.1
"TSS CREATE("ACID") PASSWORD("PWORD") " LINE.1
CODE = RC
SAY "T50ADD: THE TSS ADD COMMAND FINISHED WITH A RCODE OF " CODE
DO T = 2 TO OUTCT
   say "t50add: issuing command:" line.t
   IF LINE.T < > " " THEN
   ADDRESS TSO " "LINE.T
END
/* ADDRESS TSO "%TSSAUDU " ACID    */
SPACES= "                                                          "
SYSDATE = DATE(U)
BYE:  NOP
SIGNAL OFF ERROR
IF  MODE= "SKIPIT" THEN DO
  SAY "T50ADD: VERSION 5.0 TSO DEFAULTS BEING SET"
  BOOK1 = WORD(BOOK,1)
  rcode = 0
  do cmdnum = 1 to audu.0
    say "t50add: issuing cmd : "onlintso.cmdnum
    address tso onlintso.cmdnum
    holdrc = rc
    rcode = holdrc + rcode
    say "t50add: rcode from cmd is " holdrc
  end
  do cmdnum = 1 to audu.0
    say "t50add: issuing cmd : "audu.cmdnum
    address tso audu.cmdnum
    holdrc = rc
    rcode = holdrc + rcode
    say "t50add: rcode from cmd is " holdrc
  end
  ADDRESS ISPEXEC
  IF RCODE > 0 THEN DO
    "VGET SECRC PROFILE"
    MSG2 = "DEFAULTS TSO SETUP HAS FAILED, CHECK BOOK AUTHORITIES"
    "VPUT MSG2 PROFILE"
    SIGNAL BYE1
  END
  SAY "T50ADD: VERSION 5.0 TSO DEFAULTS HAVE BEEN SET"
END
JUSTUADS: NOP
CODE = RC
SIGNAL ON ERROR NAME BADALIAS

if code = 0 then secrc ="TSA202I: ACID added. no errors encountered."
BYE1:  NOP
SIGNAL OFF ERROR
ADDRESS ISPEXEC
"VPUT SECRC PROFILE"
 DATAAREA = ACID
"VPUT DATAAREA PROFILE"
EXIT 0
ERRMSG: NOP
  CODE = 9 /* TELL THE BYE ROUTINE THERE IS AN ERROR.*/
  secrc= "TSA201E: Errors encountered. check acid status "
  SIGNAL BYE1
BADALIAS: NOP
  IF CODE = 0 THEN
    SECRC= "ALIAS ADDITION FAILED CHECK ACID STATUS "
  ELSE SECRC = SECRC "AND ALIAS ADDITION FAILED"
  CODE = 9 /* TELL THE BYE ROUTINE THERE IS AN ERROR.*/
  SIGNAL BYE1
ABORT: NOP
  CODE = 9 /* TELL THE BYE ROUTINE THERE IS AN ERROR.*/
  secrc= "TSA200E: Function aborted. acid not added."
  SIGNAL BYE1
/****************************************************************/
/*  ERROR ROUTINE MESSAGE DISPLAYS.........DIR                  */
/****************************************************************/
FILLDOT: PROCEDURE EXPOSE LINE1 LINE2 LINE3 LINE4 LINE5 LINE6,
  LINE7 LINE8 LINE9 LINE10 LINE11 LINE12 LINE13 LINE14 LINE15 LINE.
  LINE.1 = LINE1
  LINE.2 = LINE2
  LINE.3 = LINE3
  LINE.4 = LINE4
  LINE.5 = LINE5
  LINE.6 = LINE6
  LINE.7 = LINE7
  LINE.8 = LINE8
  LINE.9 = LINE9
  LINE.10= LINE10
  LINE.11= LINE11
  LINE.12= LINE12
  LINE.13= LINE13
  LINE.14= LINE14
  LINE.15= LINE15
RETURN
FILLSCR: PROCEDURE EXPOSE LINE1 LINE2 LINE3 LINE4 LINE5 LINE6,
  LINE7 LINE8 LINE9 LINE10 LINE11 LINE12 LINE13 LINE14 LINE15 LINE.
  LINE1 = LINE.1
  LINE2 = LINE.2
  LINE3 = LINE.3
  LINE4 = LINE.4
  LINE5 = LINE.5
  LINE6 = LINE.6
  LINE7 = LINE.7
  LINE8 = LINE.8
  LINE9 = LINE.9
  LINE10= LINE.10
  LINE11= LINE.11
  LINE12= LINE.12
  LINE13= LINE.13
  LINE14= LINE.14
  LINE15= LINE.15
RETURN
