/** rexx                                                 **/
/**********************************************************/
/** added  security checking for datsets                 **/
/**********************************************************/
/** added  privpgm support 11 nov 97                     **/
/**********************************************************/
/** added  support for the STC record by creating        **/
/** the DELTRUNC. variable to be referenced in deletes   **/
/**********************************************************/
/** added  support for the user TSO area. dir 1 oct 97   **/
/**********************************************************/
/** Fixed truncation of last data line and added sitran  **/
/** support.     dave 29 aug 97                          **/
/**********************************************************/
/** NOW SUPPORTS LCF CMDS     DIR 28 AUG 97              **/
/**********************************************************/
/** MODIFY PROFILES IN A PANEL BASED ENVIRONMENT         **/
/** LOTS  OF SAYS   TO FACILITATE DEBUGGING...           **/
/**********************************************************/
/** EXEC NAME        : T80PMENU                          **/
/** LAST MODIFIED    : 25 MAR 97                         **/
/**----------------INPUT REQUIRED -----------------------**/
/** PASSED ARGS        VALID VALUES                      **/
/** ACID    :  THE PROFILE TO MANIPULATE                 **/
/** ISPF VGETS         VALID VALUES                      **/
/** DISP    : THE DISP OF THE BATCH FILE                 **/
/** DS3     : THE BATCH FILE                             **/
/**                                                      **/
/**----------------OUTPUT PRODUCED-----------------------**/
/** VALID CONDITION CODES - 00                           **/
/** ISPF VARIABLES        - SECRC                        **/
/**                                                      **/
/**----------------REQUIREMENTS--------------------------**/
/** CAN RUN STANDALONE : NO                              **/
/** ISPF ENVIRONMENT   : YES                             **/
/** EXECS CALLED WITHIN THIS EXEC :                      **/
/**********************************************************/
/** ARRAY VARIABLES                           EXAMPLE    **/
/**------------------------------------------------------**/
/** CMD  = THE VALID COMMANDS FOR THIS ENTRY   "ADD REM" **/
/** TYPE = THE RESOURCE TYPE                   "DATASET" **/
/** RSNAME= THE RESOURCE NAME                  "SYS1.  " **/
/** ACCESS=THE ACCESS LEVEL                    "UPDATE " **/
/** ACTION=THE ACTION TO TAKE                  "FAIL   " **/
/** UNTIL= THE EXPIRATION DATE OF RULE  "UNTIL(03/30/97)"**/
/** LIBRARY = THE RUNTIME LIBRARY       "SYS1.LINKLIB   "**/
/** FACILITY= THE AUTHD FAC FOR ACCESS  "TSO,BATCH      "**/
/** OTHER   = ANYTHING ELSE             "DAYS(MON.TUE)  "**/
/** DELTRUNC= Number of words to retain of the resource "**/
/**           name when doing a delete function.         **/
/**------------------------------------------------------**/
/** OUTNUM=THE # OF INPUT RESOURCE LINES                 **/
/** OUT_COUNT = THE # OF OUTPUT CHANGES                  **/
/** BATFILE.  = THE ACTUAL CHANGES TO BE WRITTEN TO DS3  **/
/**                                                      **/
/**********************************************************/
ARG ACID MODE
CALL OFF ERROR
HEX00 = '00'X
DISP = "SHR"
SYSENV = SYSVAR(SYSENV)
SECRC = "FAILED IN T80PMENU. CHECK ACIDS VALIDITY"
SECRC = SECRC||" AND YOUR CURRENT AUTHORITY"
IF SYSENV = "FORE" THEN DO
  ADDRESS ISPEXEC "VPUT SECRC PROFILE"
  ADDRESS ISPEXEC "VGET DISP PROFILE"
  ADDRESS ISPEXEC "VGET AUTHNUM PROFILE"
  ADDRESS ISPEXEC "VGET DS3 PROFILE"
  ZPF07 = "PREVM"
  ZPF19 = "PREVM"
  ZPF08 = "NEXTM"
  ZPF20 = "NEXTM"
  "ISPEXEC VPUT ZPF07  PROFILE"
  "ISPEXEC VPUT ZPF08  PROFILE"
  "ISPEXEC VPUT ZPF19  PROFILE"
  "ISPEXEC VPUT ZPF20  PROFILE"
END
DELTRUNC. =  0
F0        =  " "
UNTIL.    =  " "
ACCESS.   =  " "
RSNAME.   =  " "
OTHER.    =  " "
LIBRARY.  =  " "
FACILITY. =  " "
PGM.      =  " "
COMMAND_FALLTHRU = "ADD REM"
CMD.      =  "PER REV"
ACTION.   =  " "
IF DISP = "" THEN DISP = SHR
SIGNAL ON ERROR NAME BYEBYE
DATA="ALL,EXPIRE"
IF MODE = "ONLINE" THEN DO
  SAY "T80PMENU: ALLOCATING DSN" DS3
  ADDRESS TSO "%T80JCARD" DS3
  "ALLOC DDN(BJCL) DSN("DS3") MOD REUS"
END
SAY "T80PMENU: CALLING TSS FOR LIST OF ID " ACID
SS = OUTTRAP('INLINE.')
SIGNAL ON ERROR NAME BADID
"TSS LIST("ACID") DATA("DATA")"
RCODE = RC
SIGNAL ON ERROR NAME BYEBYE
THISREC = 3
OUT_COUNT = 0
OUTNUM = 0
SAY "T80PMENU: HAS A TOTAL RECORD COUNT OF " inline.0
DO I = 1 TO INLINE.0
  LINE = INLINE.I
  LINE = TRANSLATE(LINE," ","=") /* REPLACE = WITH SPACES */
  /***********************************************************/
  /** Kill those = signs.. very important to know for the   **/
  /** lower loop...    Dave 29 Aug 97                       **/
  /***********************************************************/
  NEXT = I + 1
  NEXTLINE = INLINE.NEXT
  /****************************/
  /* SAVE THE LAST LINE HEADER*/
  /****************************/
  FIRST13 = SUBSTR(LINE,1,13)
  IF FIRST13 \= "             " THEN SAVE13 = FIRST13
  IF SUBSTR(LINE,1,2) = "XA" THEN DO  /* KILL THE OWNER STATEMENT */
    LINE = SUBSTR(LINE,1,59)
  END
  Q = NEXT
  /***********************************************************/
  /** Reformatter area                                      **/
  /** The lower loop operates on the principal that each    **/
  /** line contains enough data to recreate any command     **/
  /** pertaining to the resources mentioned there.          **/
  /** I created this area for LCF commands, where lines do  **/
  /** not mention the facilites that they are affecting     **/
  /** nor do they mention the type of resource they are     **/
  /** securing. So I 'proprogate' the first 13 chars of     **/
  /** the line that does have this data to the lower        **/
  /** lines.      DAVE 29 AUG 97                            **/
  /***********************************************************/
  IF (SAVE13 = " AUTH CMDS  ") & (FIRST13 = "             ") THEN
    LINE = "AUTH CMDS  "||LINE
  IF (SAVE13 = " EXMP CMDS  ") & (FIRST13 = "             ") THEN
    LINE = "EXMP CMDS  "||LINE
  IF SAVE13 = " AUTH CMDS  " THEN SAY "REFORMATTED LINE:"LINE
  IF SAVE13 = " EXMP CMDS  " THEN SAY "REFORMATTED LINE:"LINE
  /****************************/
  /** END OF REFORMATTER AREA**/
  /****************************/
  PARSE VAR LINE W.1 W.2 W.3 W.4 W.5 W.6 W.7,
  W.8 W.9 W.10 W.11 W.12
  IF FIRST13 = "LCF FAC     " THEN LCFFAC = W.3
  IF W.1 = "XA" THEN DO
    OUTNUM = OUTNUM + 1
    CMD.OUTNUM = "PER REV"
    IF W.2 = "DATASET" THEN W.2 = "DSN" /* FIX FOR ADD/PER WITH DSNS*/
    TYPE.OUTNUM = W.2
    RSNAME.OUTNUM = W.3
    UNTIL.OUTNUM = W.4
    ITERATE I
  END
  IF W.1 = "ACCESS" THEN DO
    ACCESS.OUTNUM = W.2
    ITERATE I
  END
  IF W.1 = "LIBRARY" THEN DO
    LIBRARY.OUTNUM = W.2
    ITERATE I
  END
  IF W.1 = "FAC" THEN DO
    FACILITY.OUTNUM = W.2
    ITERATE I
  END
  IF W.1 = "DAYS" THEN DO
    OTHER.OUTNUM = "DAYS("W.2")"  W.3 W.4 W.5 W.6 W.7 W.8 W.9
    OTHER.OUTNUM = STRIP(OTHER.OUTNUM)
    ITERATE I
  END
  IF W.1 = "BYPASSING" THEN DO
    RSNAME.OUTNUM = W.2
    CMD.OUTNUM = "ADD REM"
    TYPE.OUTNUM = "$$BYPASS"
    ITERATE I
  END
  IF W.1 = "STC" THEN DO
    OUTNUM = OUTNUM + 1
    RSNAME.OUTNUM = "PROCNAME("W.2") acid("w.4")"
    DELTRUNC.OUTNUM = 1 /* TO DEL THIS RULE ONLY USE WORD # 1 */
    CMD.OUTNUM = "ADD REM"
    TYPE.OUTNUM = "$$BYPASS"
    ITERATE I
  END
/*************************************************/
/* SITRAN     = M3CL      FACILITY   = FINTST1   */
/* TSS ADD(CONSPROF) SIT(M3CL,FINTST1)           */
/*************************************************/
  IF W.1 = "SITRAN"   THEN DO
    OUTNUM = OUTNUM + 1
    RSNAME.OUTNUM = "SIT("W.2","W.4")"
    CMD.OUTNUM = "ADD REM"
    TYPE.OUTNUM = "$$SITRAN"
    ITERATE I
  END
  IF (W.1 = "AUTH") & (W.2 = "CMDS")  THEN DO
    OUTNUM = OUTNUM + 1
    TEMPLIST = W.3
    IF W.4 \= " " THEN TEMPLIST = TEMPLIST","W.4
    IF W.5 \= " " THEN TEMPLIST = TEMPLIST","W.5
    IF W.6 \= " " THEN TEMPLIST = TEMPLIST","W.6
    RSNAME.OUTNUM = "CMD("LCFFAC",("TEMPLIST"))"
    CMD.OUTNUM = "ADD REM"
    TYPE.OUTNUM = "$$LCFCMD"
    ITERATE I
  END
  IF (W.1 = "EXMP") & (W.2 = "CMDS")  THEN DO
    OUTNUM = OUTNUM + 1
    TEMPLIST = W.3
    IF W.4 \= " " THEN TEMPLIST = TEMPLIST","W.4
    IF W.5 \= " " THEN TEMPLIST = TEMPLIST","W.5
    IF W.6 \= " " THEN TEMPLIST = TEMPLIST","W.6
    RSNAME.OUTNUM = "XCMD("LCFFAC",("TEMPLIST"))"
    CMD.OUTNUM = "ADD REM"
    TYPE.OUTNUM = "$$LCFCMD"
    ITERATE I
  END
  IF W.1 = "ATTRIBUTES" THEN DO
    RSNAME.OUTNUM = W.2
    CMD.OUTNUM = "ADD REM"
    TYPE.OUTNUM = "$$ATTRIB"
    ITERATE I
  END
  IF W.1 = "PRIVPGM" THEN DO
    PGM.OUTNUM = W.2 W.3 W.4 W.5 W.6
    ITERATE I
  END
  IF W.1 = "ACTION" THEN DO
    ACTION.OUTNUM = W.2
    ITERATE I
  END
  IF W.1 = "FACILITY" THEN DO
    OUTNUM = OUTNUM + 1
    TYPE.OUTNUM = "FACILITY" ; RSNAME.OUTNUM = W.2
    CMD.OUTNUM = "ADD REM"
    ITERATE I
  END
  /*************************************************/
  /* below is the processing for the tso area      */
  /* note that it checks handles all tso prefixed  */
  /* words............  dir 1 oct 97               */
  /*************************************************/
  IF SUBSTR(W.1,1,3) = "TSO" THEN DO
    OUTNUM = OUTNUM + 1
    TYPE.OUTNUM = W.1 ; RSNAME.OUTNUM = W.2
    CMD.OUTNUM = "ADD REM"
    ITERATE I
  /*************************************************/
  /* Below is the area for words to ignore         */
  /*************************************************/
  END
  IF W.3 = "NAME" THEN iterate i
  IF W.1 = "DEPT" THEN ITERATE I
  IF W.1 = "ZONE" THEN ITERATE I
  IF W.1 = "DIV" THEN ITERATE I
  IF W.1 = "TYPE" THEN ITERATE I
  IF W.1 = "CREATED" THEN ITERATE I
  IF W.1 = "TSS0300I" THEN ITERATE I
  IF W.1 = "LAST" THEN ITERATE I
  IF W.1 = "ACID" THEN ITERATE I
  /*************************************************/
  /* Below is the area to change fallthru defaults */
  /*************************************************/
  IF W.1 = "LIST" & W.2 = "DATA"  THEN do
    w.1 = "DATA";w.2 = w.3;w.3 = " "
  end
  IF INDEX(W.2,"*ALL*") THEN DO
    PARSE VAR W.2  TZ1 '*ALL*' TZ2
    W.2 = TZ1||"ALL"TZ2
  END
  IF W.2 = "ADMINISTRATION" & W.3 = "AUTHORITIES"  THEN
    COMMAND_FALLTHRU = "ADMIN DEADMIN"
  /*************************************************/
  /* below is the fall thru area                   */
  /* I take my best guess at the command           */
  /*      ............  dir 29 jan 99              */
  /*************************************************/
  OUTNUM = OUTNUM + 1
  TYPE.OUTNUM = W.1 ; RSNAME.OUTNUM = W.2
  CMD.OUTNUM =  command_fallthru
  ITERATE I
END
/*******************************************************/
/*******************************************************/
/** End of loop now we create the output lines DIR    **/
/*******************************************************/
/*******************************************************/
OUTNUM = OUTNUM + 1
IF OUTNUM < 15 THEN DO A = OUTNUM TO 15
  CMD.A      = "PER REV"
  TYPE.A        = " "
  RSNAME.A      = " "
  ACCESS.A      = " "
  OUTNUM = 15
END
CALL FILLSCR
SCANSCR: NOP
DO T = 1 TO 14
  IF F.T  = 'S' THEN DO
    F.T = " "
    INTERPRET "F"||T "= ''"
    CALL SHOWRULE
  END
  IF F.T  = 'D' THEN DO
    F.T = " "
    INTERPRET "F"||T "= ''"
    SECCODE = "OK"
    IF AUTHNUM < 8  THEN CALL SECURE
    HOLD1  = T + THISREC - 1
    IF SECCODE = "OK" THEN  CALL DELRULE
    IF SECCODE \= "OK" THEN do
      SAY "T80PMENU: SECURE ROUTINE FAILED ACCESS "
      TYPE.HOLD1 = "*SECURE"
    END
    F.T = " "
  END
  IF F.T  = 'M' THEN DO
    INTERPRET "F"||T "= ''"
    SECCODE = "OK"
    IF AUTHNUM < 8  THEN CALL SECURE
    HOLD1  = T + THISREC - 1
    IF SECCODE = "OK" THEN DO
      CALL DELRULE
      SAY "T80PMENU: TYPE AFTER RULE PROCESSING IS " TYPE.T
      FLAG = "*MODIFY"
      CALL MODRULE
    END
    IF SECCODE \= "OK" THEN do
      SAY "T80PMENU: SECURE ROUTINE FAILED ACCESS "
      TYPE.HOLD1 = "*SECURE"
    END
    F.T = " "
  END
  IF F.T  = 'A' THEN DO
    INTERPRET "F"||T "= ''"
    F.T = " "
    F0 = ""
    DO TEMP3 = OUTNUM TO T BY - 1
      BEFORE = TEMP3 - 1
      F.TEMP3 = F.BEFORE
      INTERPRET "F"||TEMP3 "= F"||BEFORE
    END
    OUTNUM = OUTNUM + 1
    FILL = THISREC + T - 1
    TARGET = FILL + 1
    SAY "T80PMENU: RECNUM IS  " FILL
    SAY "T80PMENU: ACCESS IS  "ACCESS.FILL
    SAY "T80PMENU: TYPE IS    "TYPE.FILL
    SAY "T80PMENU: RSNAME IS  "RSNAME.FILL
    DO Q = OUTNUM TO TARGET BY -1
      Q1 = Q - 1
      FACILITY.Q = FACILITY.Q1
      ACTION.Q   = ACTION.Q1
      PGM.Q      = PGM.Q1
      LIBRARY.Q  = LIBRARY.Q1
      ACCESS.Q   = ACCESS.Q1
      TYPE.Q     = TYPE.Q1
      UNTIL.Q    = UNTIL.Q1
      RSNAME.Q   = RSNAME.Q1
    END
    FLAG = "*NEWRULE"
    CALL MODRULE
    F.T = " "
  END
END
CALL FILLSCR
ADDRESS ISPEXEC "DISPLAY PANEL("SECPROF")"
CALL FILLSCR
IF RC > 0 THEN SIGNAL BYEBYE
/* IF OPT = "NEXTM" THEN THISREC = THISREC + 14         */
/*IF OPT = "PREVM" THEN THISREC = THISREC - 14           */
say "option is "opt
IF (WORDS(OPT) = 1) &  (WORD(OPT,1) = "F") THEN OPT = " "
IF (WORDS(OPT) = 1) &  (WORD(OPT,1) = "FIND") THEN OPT = " "
IF WORDS(OPT) = 1 THEN SIGNAL NOLOOP
IF (WORD(OPT,1) = "FIND") | (WORD(OPT,1) = "F") then do
  HOLD2 = WORD(OPT,2)
  TGTNUM = OUTNUM - 14
  HIT = "NO"
  DO TF1 = THISREC TO OUTNUM
    IF INDEX(TYPE.TF1,HOLD2) > 0 THEN HIT = "YES"
    IF INDEX(RSNAME.TF1,HOLD2) > 0 THEN HIT = "YES"
    IF INDEX(ACCESS.TF1,HOLD2) > 0 THEN HIT = "YES"
    IF HIT = "YES" THEN THISREC = TF1
    IF HIT = "YES" THEN LEAVE
  END
  IF THISREC > TGTNUM THEN THISREC = TGTNUM
END
noloop: nop
IF WORD(OPT,1) = "PREVM" THEN DO
  IF WORDS(OPT) = 1 THEN THISREC = THISREC - 14
  HOLD2 = WORD(OPT,2)
  IF DATATYPE(HOLD2) = "NUM" THEN THISREC = THISREC - HOLD2
  IF HOLD2  = "M" THEN THISREC = 1
end
IF WORD(OPT,1) = "NEXTM" THEN DO
  IF WORDS(OPT) = 1 THEN THISREC = THISREC + 14
  HOLD2 = WORD(OPT,2)
  IF DATATYPE(HOLD2) = "NUM" THEN THISREC = OUTNUM - HOLD2
  IF HOLD2  = "M" THEN THISREC = OUTNUM - 14
END
IF OPT = "QUIT" THEN SIGNAL BYEBYE
OPT = " "
SIGNAL SCANSCR
SAY "T80PMENU : OUTNUM = " OUTNUM
BYEBYE: NOP
/*DO X = 1 TO OUTNUM                                                */
/*  BATFILE.X =  X CMD.X TYPE.X RSNAME.X UNTIL.X ACCESS.X LIBRARY.X,*/
/*  ACTION.X                                                        */
/*END                                                               */
"EXECIO "OUT_COUNT" DISKW BJCL ( FINIS STEM BATFILE.)"
 SECRC = "FUNCTION COMPLETED. OUTPUT IN " DS3
 IF MODE = "BATCH" THEN
   SECRC = "FUNCTION COMPLETED. OUTPUT APPENDED TO BATCH FILE."
 IF SYSENV = "FORE" THEN
   ADDRESS ISPEXEC "VPUT SECRC PROFILE"
EXIT 0
/********************************************************************/
/********************************************************************/
/********************************************************************/
BADID: NOP
 SECRC = "ID LIST FAILED, CHECK YOUR AUTHORITIES AND IDS EXISTANCE"
 IF SYSENV = "FORE" THEN
   ADDRESS ISPEXEC "VPUT SECRC PROFILE"
EXIT 0
/********************************************************************/
/********************************************************************/
/********************************************************************/
SEEYA: NOP
"FREE DDN(BATFILE)"
EXIT 0
/******************************************************************/
/**  THE SHOWRULE SECTION                                        **/
/******************************************************************/
SHOWRULE: PROCEDURE EXPOSE TYPE. RSNAME. UNTIL. ACCESS. LIBRARY. T,
       ACTION. FACILITY. THISREC PGM. OTHER.
CALL OFF ERROR
TEMP   = T + THISREC - 1
SAY "T80PMENU: TEMP IS " TEMP
ACTION   = ACTION.TEMP
FACILITY = FACILITY.TEMP
PGM      = PGM.TEMP
ACCESS   = ACCESS.TEMP
OTHER    = OTHER.TEMP
LIBRARY  = LIBRARY.TEMP
UNTIL    = UNTIL.TEMP
TYPE     = TYPE.TEMP
RSNAME   = RSNAME.TEMP
SAY "T80PMENU: INSIDE SHOWRULE ROUTINE"
SAY "T80PMENU: ACTION IS   "  ACTION
SAY "T80PMENU: FACILITY IS "  FACILITY
SAY "T80PMENU: PGM IS      "  PGM
SAY "T80PMENU: ACCESS IS   "  ACCESS
SAY "T80PMENU: LIBRARY IS  "  LIBRARY
SAY "T80PMENU: UNTIL IS    "  UNTIL
SAY "T80PMENU: TYPE IS     "  TYPE
SAY "T80PMENU: RSNAME IS   "  RSNAME
ADDRESS ISPEXEC "VPUT (ACTION ACCESS LIBRARY UNTIL TYPE RSNAME) PROFILE"
ADDRESS ISPEXEC "VPUT (FACILITY PGM) PROFILE"
ADDRESS ISPEXEC "ADDPOP POPLOC(DATA2)"
/* ADDRESS ISPEXEC "SETMSG MSG(TSSM000) MSGLOC(POPMSG)" */
ADDRESS ISPEXEC "DISPLAY PANEL(SECSHOW)"
ADDRESS ISPEXEC "REMPOP"
RETURN
/*******************************************************/
/**              THE SECURITY CHECK                   **/
/*******************************************************/
SECURE: PROCEDURE EXPOSE TYPE. RSNAME. ACCESS. T,
       ACTION. THISREC CMD. FLAG,
       ACID OTHER. SECCODE
/**********************/
/* VARIABLE INIT AREA */
/**********************/
CALL OFF ERROR
VALID = "NO"
TEMP   = T + THISREC - 1
OUT_RNAME = RSNAME.TEMP
ACCESS   = ACCESS.TEMP
TYPE     = TYPE.TEMP
SAY "T80PMENU(SECURE): MODRULE TYPE WAS :" TYPE
RSNAME   = RSNAME.TEMP
RES.0 = 2
RES.1 = "DSN"
RES.2 = "JESSPOOL"
/**********************/
/* VARIABLE CHECK AREA*/
/**********************/
DO Q = 1 TO RES.0
  IF RES.Q = TYPE THEN VALID = "***DISABLED***"
END
IF TYPE = "*SECURE" THEN SECCODE = 16
SAY "MODRULE VALID IS" VALID
IF VALID = "YES" THEN DO
  RESCHK = TRANSLATE(RSNAME,"Z","*") /* REPLACE * WITH zzzzzz */
  ACCCHK = "ALTER"
  IF TYPE = "DSN" THEN TYPE = "DATASET"
  RSTYPE = STRIP(TYPE)
  /* Q = OUTTRAP(HOLD.,5)  */
  SAY "********CHECK IS BELOW **************"
  SAY " TSSCHECK("RSTYPE","RESCHK","ACCCHK",NOMSG)"
  SECCODE = TSSCHECK(RSTYPE,RESCHK,ACCCHK,"NOMSG")
  SAY "********CHECK IS BELOW **************"
  SAY "T80PMENU(MODRULE): TSSCHECK RETURN CODE IS " SECCODE
END
RETURN
/*******************************************************/
/******************************************************************/
/**  THE MODRULE SECTION                                         **/
/******************************************************************/
/*******************************************************/
MODRULE: PROCEDURE EXPOSE TYPE. RSNAME. UNTIL. ACCESS. LIBRARY. T,
       ACTION. FACILITY. THISREC PGM. CMD. BATFILE. OUT_COUNT FLAG,
       ACID OTHER. SECCODE
CALL OFF ERROR
OUT_COUNT = OUT_COUNT + 1
SAY "T80PMENU: RECNUM IS " FILL
TEMP   = T + THISREC - 1
SAY "T80PMENU: RECNUM IS " TEMP
OUT_CMD = WORD(CMD.TEMP,1)
OUT_RNAME = RSNAME.TEMP
ACTION   = ACTION.TEMP
FACILITY = FACILITY.TEMP
PGM      = PGM.TEMP
ACCESS   = ACCESS.TEMP
OTHER    = OTHER.TEMP
LIBRARY  = LIBRARY.TEMP
UNTIL    = UNTIL.TEMP
TYPE     = TYPE.TEMP
SAY "T80PMENU: MODRULE TYPE WAS :" TYPE
IF SUBSTR(STRIP(TYPE),1,1) = "*" THEN
  TYPE     = WORD(TYPE.TEMP,2) WORD(TYPE.TEMP,3)
IF SUBSTR(STRIP(TYPE),1,1) = "*" THEN
  TYPE     = WORD(TYPE.TEMP,2) WORD(TYPE.TEMP,3)
TYPE.TEMP = FLAG TYPE
SAY "T80PMENU: MODRULE TYPE WAS :" TYPE
RSNAME   = RSNAME.TEMP
SAY "T80PMENU: INSIDE MODRULE  ROUTINE"
SAY "T80PMENU: ACTION IS"  ACTION
SAY "T80PMENU: FACILITY IS "  FACILITY
SAY "T80PMENU: PGM IS"  PGM
SAY "T80PMENU: ACCESS IS"  ACCESS
SAY "T80PMENU: LIBRARY IS"  LIBRARY
SAY "T80PMENU: UNTIL IS"  UNTIL
SAY "T80PMENU: TYPE IS"  TYPE
SAY "T80PMENU: RSNAME IS"  RSNAME
ADDRESS ISPEXEC "VPUT (ACTION ACCESS LIBRARY UNTIL TYPE RSNAME) PROFILE"
ADDRESS ISPEXEC "VPUT (FACILITY PGM) PROFILE"
ADDRESS ISPEXEC "ADDPOP POPLOC(DATA2)"
/* ADDRESS ISPEXEC "SETMSG MSG(TSSM000) MSGLOC(POPMSG)" */
ADDRESS ISPEXEC "DISPLAY PANEL(SECUPDT)"
RCODE = RC
ADDRESS ISPEXEC "REMPOP"
IF RCODE > 0 THEN DO
  OUT_COUNT = OUT_COUNT - 1  /* KILL THE DELETE ENTRY */
  TYPE.TEMP = TYPE           /* RESET THE TYPE FIELD */
  MSG = " MODIFY ABORTED DUE TO PANEL RETURN CODE."
  RETURN
END
IF INDEX(TYPE,"$$") THEN
  H = "TSS "OUT_CMD||"("ACID") "RSNAME
ELSE DO
  H = "TSS "OUT_CMD||"("ACID") "
  H = H||TYPE||"("RSNAME") + "
END
BATFILE.OUT_COUNT = H
H =  ''
OUT_COUNT = OUT_COUNT + 1
IF LENGTH(UNTIL) = 8 THEN UNTIL = "UNTIL("UNTIL")"
IF ACCESS <> '' THEN H = H||"ACCESS("ACCESS") "
IF LIBRARY <> '' THEN DO
  H = H||"LIBRARY("LIBRARY") + "
  BATFILE.OUT_COUNT = "  "||H
  H =  ''
  OUT_COUNT = OUT_COUNT + 1
END
IF PGM <> '' THEN H = H||"PRIVPGM("PGM") "
IF UNTIL  <> '' THEN H = H||" "UNTIL
IF ACTION <> '' THEN H = H||" ACTION("ACTION") "
IF FACILITY <> '' THEN H = H||" FAC("FACILITY") "
IF OTHER <> '' THEN H = H OTHER
BATFILE.OUT_COUNT = "  "||H
PGM.TEMP      = PGM
ACCESS.TEMP   = ACCESS
LIBRARY.TEMP  = LIBRARY
ACTION.TEMP   = ACTION
FACILITY.TEMP = FACILITY
UNTIL.TEMP    = UNTIL
RSNAME.TEMP    = RSNAME
RETURN
/******************************************************************/
/** THE DELETE RULE SECTION                                      **/
/******************************************************************/
DELRULE: PROCEDURE EXPOSE TYPE. RSNAME. T ACID,
        THISREC UPDATE. CMD. BATFILE. OUT_COUNT DELTRUNC.
CALL OFF ERROR
TEMP   = T + THISREC - 1
OUT_COUNT = OUT_COUNT + 1
TYPE= TYPE.TEMP
IF SUBSTR(STRIP(TYPE),1,1) = "*" THEN
  TYPE     = WORD(TYPE.TEMP,2) WORD(TYPE.TEMP,3)
IF SUBSTR(STRIP(TYPE),1,1) = "*" THEN
  TYPE     = WORD(TYPE.TEMP,2) WORD(TYPE.TEMP,3)
TYPE.TEMP = "*DELETE" TYPE.TEMP
OUT_ACID = ACID
OUT_CMD = WORD(CMD.TEMP,2)
OUT_RNAME = RSNAME.TEMP
OUT_TRUNC = DELTRUNC.TEMP
/******************************/
/** truncate the rsname maybe**/
/******************************/
IF OUT_TRUNC = 1 THEN OUT_RNAME = WORD(OUT_RNAME,1)
IF OUT_TRUNC = 2 THEN
  OUT_RNAME = WORD(OUT_RNAME,1) WORD(OUT_RNAME,2)
IF OUT_TRUNC = 3 THEN
  OUT_RNAME = WORD(OUT_RNAME,1) WORD(OUT_RNAME,2) WORD(OUT_RNAME,3)
IF SUBSTR(TYPE,1,1) = "*" THEN TYPE = WORD(TYPE,2) WORD(TYPE,3)
IF INDEX(TYPE,"$$") THEN
  H = "TSS "OUT_CMD||"("ACID") "OUT_RNAME
ELSE DO
  H = "TSS "OUT_CMD||"("ACID") "
  /*                         */
  H = H||TYPE||"("OUT_RNAME")"
END
BATFILE.OUT_COUNT = H
/* SAY OUT_COUNT */
/* SAY H*/
RETURN
FILLSCR: PROCEDURE EXPOSE THISREC OUTNUM TYPE. RSNAME. ACCESS. T,
 F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 F13 F14 TYPE1 TYPE2 TYPE3,
 TYPE4 TYPE5 TYPE6 TYPE7 TYPE8 TYPE9 TYPE10 TYPE11 TYPE12 TYPE13,
 ACCESS1 ACCESS2 ACCESS3 ACCESS4 ACCESS5 ACCESS6 ACCESS7 ACCESS8,
 ACCESS9 ACCESS10 ACCESS11 ACCESS12 ACCESS13 ACCESS14 TYPE14,
 RSNAME1 RSNAME2 RSNAME3 RSNAME4 RSNAME5 RSNAME6 RSNAME7 RSNAME8,
 RSNAME9 RSNAME10 RSNAME11 RSNAME12 RSNAME13 RSNAME14,
 F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 F13 F14 F.
OPT = " "
IF THISREC < 1 THEN DO
   THISREC = 1
   MSG = "T80PMENU: TOP OF DATA REACHED"
END
IF (THISREC > OUTNUM - 14)  THEN DO
  THISREC = OUTNUM - 14
  MSG = "T80PMENU: BOTTOM OF DATA REACHED"
END
DO T = 1 TO 14
  FILL = THISREC + T - 1
  INTERPRET "F."T "=  F"||T
  IF WORDS(TYPE.FILL) > 2 THEN DO
    SAY "T80PMENU: SCREEN ROUTINE TYPE IS " TYPE.FILL
    TYPE.FILL = WORD(TYPE.FILL,1) WORD(TYPE.FILL,3)
    SAY "T80PMENU: SCREEN ROUTINE TYPE IS " TYPE.FILL
  END
  INTERPRET "TYPE"||T " =  TYPE.FILL"
  INTERPRET "RSNAME"||T "= RSNAME.FILL"
  INTERPRET "ACCESS"||T  "=  ACCESS.FILL"
END
RETURN
