* THIS IS THE CORE COMMAND LIST MEMBER FOR THE PANEL SYSTEM
* ALL PARAMETERS HERE ARE POSITIONALLY DEPENDANT ( WORD ORDER NOT COL)
* THE FORMAT IS AS FOLLOWS:
* KEEP THIS MEMBERS ALL CAPITAL LETTERS FOR PARSING PUSPOSES.
*
* WORD
* CMDNAME =  THE NAME THAT MUST BE TYPED AT THE PANEL OPTION FIELD FOR
*            A MATCH TO OCCUR.
*
* WORD
* COMMAND =  THE 1 TO 8 CHAR NAME OF THE COMMAND TO BE
*            EXECUTED WHEN THIS OPTION IS TAKEN, BE SURE TO USE A %
*            IF IT IS A REXX OR CLIST COMMAND. IF TVER. IS SPECIFIED
*            IT WILL BE REPLACED BY THE TVER VARIABLE INTERNAL TO THE
*            PANEL EXEC. %T42 %T43 %T44 %T50 ETC
*
* WORD
* MSG     =  0 INDICATES THE ROUTINE PUTS NO MESSAGE IN THE SECRC
*            PROFILE POOL VARIABLE, A 1 INDICATES A MSG IS PLACED IN
*            SECRC AND YOU WISH IT DISPLAYED UPON COMMAND COMPLETION.
*            THE FIELD "DATA" INDICATES THAT THE DATAAREA FIELD IS
*            TO BE RETRIEVED AND PLACED IN THE ACID FIELD.
*
* WORD
* DATA    =  0 INDICATES THAT THE DATA FIELD IS NOT REQUIRED FOR THIS
*            COMMAND. A 1 INDICATES THAT IT MUST BE PRESENT. THE VALUE
*            "NUM" INDICATES THE FIELD MUST BE NUMERIC. THE VALUE
*            "CHAR" INDICATES THE FIELD MUST BE CHARACTER.
*            THE VALUE "OPTC" MEANS IF PROVIDED THE FIELD MUST BE
*            A CHARACTER VALUE.
*            THE VALUE "OPTN" MEANS IF PROVIDED THE FIELD MUST BE
*            A NUMERIC VALUE.
*
* WORD
* DATA2   =  0 INDICATES THAT THE DATA2 FIELD IS NOT REQUIRED FOR THIS
*            COMMAND. A 1 INDICATES THAT IT MUST BE PRESENT. THE VALUE
*            "NUM" INDICATES THE FIELD MUST BE NUMERIC. THE VALUE
*            "CHAR" INDICATES THE FIELD MUST BE CHARACTER.
*            THE VALUE "OPTC" MEANS IF PROVIDED THE FIELD MUST BE
*            A CHARACTER VALUE.
*            THE VALUE "OPTN" MEANS IF PROVIDED THE FIELD MUST BE
*            A NUMERIC VALUE.
*
* WORD
* AUTH    =  A NUMBER FROM 1 TO 10 (10 BEING HIGHEST AUTH)  TO INDICATE
*            THE AUTHORITY NEEDED TO EXECUTE THIS COMMAND.
*            THIS IS SET IN MEMBER IDLIST OF PARMLIB
*
* WORD
* TRAP    =  A 0 OR "OFF" VALUE WILL CAUSE ALL WRITES OR SAYS FROM THE
*            EXEC TO APPEAR ON THE USERS SCREEN. NORMALLY OUTPUT IS
*            TRAPPED AND THE SECRC VAR IS CHECKED. THIS VALUE WILL NOT
*            CHANGE SECRC RETRIEVAL LOGIC.
*
*            AN "ON" VALUE CAUSES SUBCOMMAND OUTPUT TO BE HIDDEN FROM
*            VIEW FROM THE USER.
*
*            A "LOG" VALUE CAUSES SUBCOMMAND OUTPUT TO BE HIDDEN FROM
*            VIEW FROM THE USER, BUT WHEN THIS COMMAND IS ISSUED A
*            RECORD IS WRITTEN TO THE USERS LOG FILE.
*
*            A "LOGALL" VALUE CAUSES SUBCOMMAND OUTPUT TO BE HIDDEN FROM
*            VIEW FROM THE USER, BUT WHEN THIS COMMAND IS ISSUED ALL
*            OUTPUT IS WRITTEN TO THE USERS LOG FILE. THIS SETTING
*            CAUSES A LARGE AMOUNT OF OVERHEAD AND WILL  CONSTANTLY
*            OVERLAY THE DS3 DATASET AS A WORKAREA. THIS SETTING SHOULD
*            BE USED WITH EXTREME CAUTION.
*
* WORD
* BATCH   =  0 = INDICATES THAT THE EXEC WILL NOT RECEIVE
*            CONTROL (OR COMMAND WILL NOT BE ISSUED) IF USER
*            IS IN BATCH MODE, BUT THAT A RECORD IS TO BE
*            WRITTEN TO THE BATCH FILE.
*
*            1 = INDICATES THAT THE COMMAND IS TO BE ISSUED
*            IN ANY ENVIRONMENT AND DOES SUPPORT A PREOPENED
*            BATCH FILE FOR UPDATES ( FEW EXECS NEED THIS OPTION )
*            THE COMMAND IS RESPONSIBLE FOR ITS OWN MODE DECISION
*            MAKING, ISSUING COMMANDS ETC,
*            THE COMMAND SHOULD NOT CLOSE THE FILE
*
*            2 =   ANY OTHER VALUE RESULTS IN THE COMMAND BEING
*            ISSUED IMMEDIATELY REGARDLESS OF THE MODE, WITH NO
*            OPEN BATCH FILE, THIS SHOULD NOT BE SPECIFIED FOR
*            ANY COMMANDS THAT UPDATE TOP SECRET . THE PURPOSE OF BATCH
*            MODE IS TO DEFER ALL UPDATES TILL THE JCL IS RUN.
*
*
* THE REST ARE
* VARS    =  A LIST OF THE VARIABLES THAT THIS EXEC USES .
*            THE LIST OF VARS TO BE PASSED. IF A LITERAL
*            VALUE IS TO BE PASSED PREFACE THE VALUE WITH AN UNDERSCORE.
*            THIS IS A MUST IF THERE IS A SPECIAL CHARACTER IN THE
*            LITERAL.
*            EXAMPLE :  _ADD( ACID _) _AUDIT
*            WILL TRANSLATE TO "ADD( THEID ) AUDIT " IF ACID = THEID
*            IF THERE CANNOT BE IMBEDDED SPACES BETWEEN A LITERAL AND A
*            VARIABLE OR TWO VARIABLES THEN PREFACE THE RIGHTMOST VALUE
*            WITH A "<" .
*            EXAMPLE :  _PER( ACID _) _SDSF(ISFAUTH.DEST. <DATA _)
*            WILL TRANSLATE TO "PER( MYACID  ) SDSF(ISFAUTH.DEST.LOCAL )"
*
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
**** BELOW ARE THE COMMANDS THAT WORK IN BOTH MODES
 ABEND    ZZABADCMD 1      0     0    3    ON     2      ACID
 ADDPROG  TVER.ASYS 0      1     0    5    ON     0      ACID _PRODSUPP _SYS1 _$LOCAL _0711 DATA
 ADDSYS   TVER.ASYS 0      1     0    5    ON     0      ACID _SYSSW _SYS1 _$LOCAL _0711 DATA
 DEL      TVER.IDEL 0      0     0    5    ON     0      ACID
 DELETE   TVER.IDEL 0      0     0    5    ON     0      ACID
 ADDSEC   TVER.ASEC 0      1     0    5    ON     0      ACID _SYSSW _SYS1 _$LOCAL _0711 DATA
*NVADDU   %EMSBADD  1      1     0    5    ON     2      OPT $1.ACID DATA
 B1       %RXBROWSE 1      0     0    3    ON     2      DS1
 B2       %RXBROWSE 1      0     0    3    ON     2      DS2
 B3       %RXBROWSE 1      0     0    3    ON     2      DS3
 B4       %RXBROWSE 1      0     0    3    ON     2      DS4
 B5       %RXBROWSE 1      0     0    3    ON     2      DS5
 E1       %RXEDIT   0      0     0    3    ON     2      DS1
 E2       %RXEDIT   0      0     0    3    ON     2      DS2
 E3       %RXEDIT   0      0     0    3    ON     2      DS3
 E4       %RXEDIT   0      0     0    3    ON     2      DS4
 E5       %RXEDIT   0      0     0    3    ON     2      DS5
 VARUPDATE %TSSDPANL 0     0     0   10    LOG    2      _JCARD.RECFILE.ACCTDSN.DSBACK.MSCA.TSOUNIT.TSOSIZE
 VIEWCMD  %TBVIEW   0      0     0   10    OFF    2      CMDTABLE _1
 VIEWSCR  %TBVIEW   0      0     0   10    OFF    2      SCRTABLE _0
**** BELOW ARE THE EXPERT MODE CALLS FOR T50ICOMP
 AUTH     %AUTHRUN  0      CHAR  0    4    ON     0      DEF <_( <DATA <_) ACID
 AUTHRUN  %AUTHRUN  0      CHAR  0    4    ON     0      DEF <_( <DATA <_) ACID
 CMDS     %FSDISP   0      0     0    5    LOG    2      ACID
 GETBACK   %GETBACKU 1     0     0    3    ON     2      DSBACK <_( <ACID <_) DS1 _SHR
 L        LU        0      CHAR  0    3    OFF    2       $1.ACID _TSO _CICS _DFP _OMVS
 LS       %FSDISP   0      0     0    3    ON     2      _LU   $1.ACID _TSO _CICS _DFP _OMVS
**** ABOVE ARE THE EXPERT MODE CALLS FOR T50ICOMP
**** BASIC DEFINTIONS ARE BELOW
* POPUP DEFINITION COMMANDS ARE BELOW
* PNLNAME    CMDNAME        M D  D   A   T      B    VARS
*   |           |           S A  A   U   R      A     |
*   |           |           G T  T   T   A      T     |
*   |           |             A  A   H   P      C     |
*   |           |                2              H     |
*
  AUTHORIZE  /004.AUTHRUN   1 0  0   5   ON     0   DEF <_( <V2 <_) V1
  BACKUP     /012.TVER.BKUP 1 0  0   3   ON     2   V1
  BROWSEA    %RXBROWSE      0 0  0   4   ON     2   _' <DEF <_'
  BYPADD     /022.TSS       0 0  0   9   ON     0   _MODIFY _FAC( <V1 <_=BYPADD <_( <V2 <_= <V3 <_))
* POPUP DEFINITION COMMANDS ARE BELOW
* PNLNAME    CMDNAME        M D  D   A   T      B    VARS
*   |           |           S A  A   U   R      A     |
*   |           |           G T  T   T   A      T     |
*   |           |             A  A   H   P      C     |
*   |           |                2              H     |
*
  CMDSCREEN  /021.FSDISP    1 0  0   5   ON     2   V1
  DSNONE     /014.TVER.PER  1 0  0   4   ON     0   V1 _DATASET V2 _NONE
  EXTEND     /009.TSS       0 0  0   5   ON     0   _REP( V1 _) _PASSWORD(*, <V2 _)
  FASTDEL    /018.TSS       1 0  0   4   ON     2   _DEL( V1 )
  MAKEAUTH   /001.TVER.ICOMP 1 0 0   5   ON     2   _REBUILD V1
  FULLCON    /001.TVER.ICOMP 1 0 0   5   ON     2   _REBUILD V1
* POPUP DEFINITION COMMANDS ARE BELOW
* PNLNAME    CMDNAME        M D  D   A   T      B    VARS
*   |           |           S A  A   U   R      A     |
*   |           |           G T  T   T   A      T     |
*   |           |             A  A   H   P      C     |
*   |           |                2              H     |
*
  GETBACKUP  /020.GETBACKU  1 0  0   3   ON     2   DSBACK <_( <V1 <_) DS1 _SHR
  GIVEUID    /019.GIVEUID   1 0  0   5   ON     0   V1 V2
  GROUPCMD   /016.TVER.GCMD 1 0  0   6   ON     2   V1 DS3 V2
  GROUPDEL   /027.TVER.GDEL 1 0   0  10   ON     1   V1 MODE
  HOME       /033.TSS       1 0   0  5   ON     1   _ADD( V1 _) _HOME( <V2 <_)
  INSERT     /010.TVER.INS  1 0  0   4   ON     0   V1 V2 V3 V4
  LIST       /003.TSS       0 0  0   5   OFF    2   _LIST( V1 _) _DATA( V2 _)
  LISTFAC    /024.FSDISP    0 0  0   8   ON     2    _TSS _MODIFY _FAC( <V1 <_) _| _TSS _MODIFY _FAC( <V1 <_=BYPLIST)
  LISTO      /003.TVER.LSTO 1 0  0   5   ON     2   V1 V2 DS1
  LISTS      /003.FS        0 0  0   5   ON     2   _TSS _LIST( V1 _) _DATA( V2 _)
  MODFAC     /023.TSS       0 0  0   9   ON     0   _MODIFY _FAC( <V1 <_= <V2 <_)
  MODF            TSS       0 0  0   9   ON     0   _MODIFY _FAC( <ACID <_= <DATA <_)
* MODIFY     TVER.ICOMP     1 0  0   5   LOG    2   _MODIFY  $1.ACID
  MOD        TVER.ICOMP     1 0  0   5   LOG    2   _MODIFY ACID
  MODIFY     /032.TVER.ICOMP 1 0 0   5   LOG    2   _MODIFY V1
  PCONVERT   /001.TVER.ICOMP 1 0 0   5   ON     2   _PERMIT V1
  PREVOKE    /001.TVER.ICOMP 1 0 0   5   ON     2   _REVOKE V1
  REMOVE     /011.TVER.INS  1 0  0   4   ON     0   V1 V2 _0
* POPUP DEFINITION COMMANDS ARE BELOW
* PNLNAME    CMDNAME        M D  D   A   T      B    VARS
*   |           |           S A  A   U   R      A     |
*   |           |           G T  T   T   A      T     |
*   |           |             A  A   H   P      C     |
*   |           |                2              H     |
*
  VOLALL     /017.TVER.PER  1 0  0   4   ON     0   V1 _VOL V2 _ALL
  VOLCREATE  /017.TVER.PER  1 0  0   4   ON     0   V1 _VOL V2 _CREATE
  VOLNONE    /017.TVER.PER  1 0  0   4   ON     0   V1 _VOL V2 _NONE
  VOLREAD    /017.TVER.PER  1 0  0   4   ON     0   V1 _VOL V2 _READ
  VOLREVOKE  /017.TVER.PER  1 0  0   4   ON     0   V1 _VOL V2 _REMOVE
*
* OPTION    CMDNAME     SCREEN
*
 0         /SCREEN      SPISTAT
 1         /SCREEN      SPIBASIC
 1.0       /SCREEN      SPISTAT
 2         /SCREEN      SPILIST
 2.0       /SCREEN      SPISTAT
 3         /SCREEN      SPIAADD
 3.0       /SCREEN      SPISTAT
 4         /SCREEN      SPIAUTH
 4.0       /SCREEN      SPISTAT
 4.1       /SCREEN      SPIADSN
 4.1.0     /SCREEN      SPISTAT
 4.2       /SCREEN      SPIADASD
 4.2.0     /SCREEN      SPISTAT
 4.3       /SCREEN      SPITSO
 4.4       /SCREEN      SPIAUNIX
 5         /SCREEN      SPIBACKU
 6         /SCREEN      SPICONV
 7         /SCREEN      SPIDEL
 8         /SCREEN      SPIDSNS
 8.0       /SCREEN      SPISTAT
 9         /SCREEN      SPIPROFS
 9.0       /SCREEN      SPISTAT
 10        /SCREEN      SPIGROUP
 11        /SCREEN      SPIIOPT
 12        /SCREEN      SPI.SYSID.
 13        /SCREEN      SPITSST

