* THIS IS A SAMPLE SUPPLEMEMTAL COMMAND MEMBER
* DOC FOR THIS IS IN THE CORECMD MEMBER
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
 CACHESTAT %FSDISP  0      0     0    8    ON     2      _TSS _MODIFY _CACHE(STATUS)
 CLONE     TSS      0      1     0    4    ON     0      _CRE( ACID _) _USING( DATA _)
 DISCONNECT TVER.DISC 1    0     0    8    ON     1      ACID MODE
 GROUPDELETE TVER.GDEL 1   0     0    10   ON     1      ACID MODE
 LFAC     %FSDISP   0      0     0    8    ON     2      _TSS _MODIFY _FAC( <ACID <_) _| _TSS _MODIFY _FAC( <ACID <_=BYPLIST)
 LISTNAME %TSSLNAME 1      0     0    4    ON     2      TVER <_PWHO ACID DS3
 LISTNAMEB %TSSLNAME 1     0     0    4    ON     0      TVER <_PWHO ACID DS3
 LISTNAMES %TSSLNAME 1     0     0    4    ON     2      TVER <_PWHO ACID DS3
 MAKECFILE %TSSCFILE 1     0     0    5    ON     2
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
*
 SIMULATE %FSDISP   0      CHAR  CHAR 4    OFF    2      TVER <_DSSIM ACID DATA _TSO DATA2 DS2
*         IN SIMULATE ABOVE, DATA IS TWO PARMS, RESOURCE TYPE AND RESOURCE NAME
*         DATA2 IS ACCESS LEVEL                                         CE NAME
 DSNTEST  %FSDISP   0      CHAR  CHAR 4    OFF    2      TVER <_DSSIM ACID _DSN DATA _TSO DATA2 DS2
 MVSTEST  %FSDISP   0      CHAR  CHAR 4    OFF    2      TVER <_DSSIM ACID _OPERCMD DATA _TSO DATA2 DS2
 SPOOLTEST %FSDISP  0      CHAR  CHAR 4    OFF    2      TVER <_DSSIM ACID _JESSPOOL DATA _TSO DATA2 DS2
 VARUPDATE %TSSDPANL 0     0     0    10   OFF    2      _JCARD.RECFILE.AUD.ACCTDSN.DSBACK.MSCA.TSOUNIT.TSOSIZE
 TSSSTAT  %FSDISP   0      CHAR  0    9    ON     0       _TSS _MODIFY _STATUS
 VOLTEST  %FSDISP   0      CHAR  CHAR 4    OFF    2      TVER <_DSSIM ACID _DASDVOL DATA _TSO DATA2 DS2
*
* NOW COME THE NON REXX BASED COMMANDS MOST ARE CALLS TO TSS
* WITH PARMS SUPPLIED IN THE PANELS FIELDS.
* REMEMBER THE UNDERSCORE SPECIFIES A LITERAL VALUE
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
 ADDAUD   TSS       0      0     0    8    ON     0      _ADD( ACID _) _AUDIT
 ADDSTC   TSS       0      CHAR  0    9    ON     0      _ADD(STC) _PROC( ACID _) _ACID( DATA _)
 AF       TSS       0      CHAR  0    4    ON     0      _ADD( ACID _) _FAC( DATA _)
 DSNOWN   TSS       0      CHAR  0    8    ON     0      _ADD( ACID _) _DSN( DATA <_.)
 DESTOWN  TSS       0      CHAR  0    6    ON     0      _PER( ACID _) _SDSF(ISFAUTH.DEST. <DATA _) _ACCESS(ALL)
 DESTREAD TSS       0      CHAR  0    6    ON     0      _PER( ACID _) _SDSF(ISFAUTH.DEST. <DATA _)
 EXPIRE   TSS       0      NUM   0    3    ON     0      _ADD( ACID _) _FOR( DATA _)
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
*
 JESIDADD     TSS   0      CHAR  0    4    ON     2      _PER( ACID _)  _JESSPOOL( JESNODE <_. <DATA _) _ACC(ALL)
 JESIDREMOVE  TSS   0      CHAR  0    4    ON     2      _REV( ACID _)  _JESSPOOL( JESNODE <_. <DATA _)
 JESJOBADD    TSS   0      CHAR  0    4    ON     2      _PER( ACID _)  _JESSPOOL( JESNODE <_.*. <DATA _) _ACC(ALL)
 JESJOBREMOVE TSS   0      CHAR  0    4    ON     2      _REV( ACID _)  _JESSPOOL( JESNODE <_.*. <DATA _)
 MODFAC   TSS       0      CHAR  0    9    ON     0      _MODIFY _FAC( <ACID <_= <DATA <_)
 NEWNAME  TSS       0      CHAR  0    4    ON     0      _REP( ACID _) _NAME(' DATA <_')
 OMONDEF  TSS       0      0     0    7    ON     0      _ADD(??????? _) _KOMCANDL( ACID _)
 OMONPER  TSS       0      CHAR  0    7    ON     0      _PER( ACID _) _KOMCANDL( DATA _)
 OMONREV  TSS       0      CHAR  0    7    ON     0      _REV( ACID _) _KOMCANDL( DATA _)
 OMVSR    TSS       0      CHAR  0    9    ON     0      _MODIFY _OMVSTABS
 PWNOXP   TSS       0      0     0   10    ON     0      _REP( ACID _) _PASSWORD(*,0)
 PWREP    TSS       0      0     0    3    ON     0      _REP( ACID _) _PASSWORD( NEWPASS _)
 PWX      TSS       0      0     0    8    ON     0      _REP( ACID _) _PASSWORD(*,60)
 REMAUD   TSS       0      0     0    8    ON     0      _REM( ACID _) _AUDIT
 REMEXP   TSS       0      0     0    8    ON     0      _REM( ACID _) _FOR
 REMSTC   TSS       0      CHAR  0    9    ON     0      _REM(STC) _PROC( ACID _)
 RF       TSS       0      CHAR  0    4    ON     0      _REM( ACID _) _FAC( DATA _)
 STCADD   TSS       0      CHAR  0    9    ON     0      _ADD(STC) _PROC( ACID _) _ACID( DATA _)
 STCREM   TSS       0      CHAR  0    9    ON     0      _REM(STC) _PROC( ACID _)
 SUSPEND  TSS       0      0     0    2    ON     0      _ADD( ACID _) _SUSPEND
 UNSUSPEND  TSS     0      0     0    2    ON     0      _REM( ACID _) _SUSPEND
