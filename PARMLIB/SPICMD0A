* THIS IS THE COMMAND LIST DATASET FOR THE PANEL SYSTEM
* ALL PARAMETERS HERE ARE POSITIONALLY DEPENDANT ( WORD ORDER NOT COL)
* THE FORMAT IS AS FOLLOWS:
*
* WORD
* CMDNAME =  THE NAME THAT MUST BE TYPED AT THE PANEL OPTION FIELD FOR
*            A MATCH TO OCCUR.
*
* WORD
* COMMAND =  THE 1 TO 8 CHAR NAME OF THE COMMAND TO BE
*            EXECUTED WHEN THIS OPTION IS TAKEN, BE SURE TO USE A %
*            IF IT IS A REXX OR CLIST COMMAND. IF TVER. IS SPECIFIED
*            IT WILL BE REPLACED BY THE TVER VARIABLE INTERNAL TO THE
*            PANEL EXEC. %T42 %T43 %T44  ETC.
*
* WORD
* MSG     =  0 INDICATES THE ROUTINE PUTS NO MESSAGE IN THE SECRC
*            PROFILE POOL VARIABLE, A 1 INDICATES A MSG IS PLACED IN
*            SECRC AND YOU WISH IT DISPLAYED UPON COMMAND COMPLETION.
*            THE FIELD  DATA  INDICATES THAT THE DATAAREA FIELD IS
*            TO BE RETRIEVED AND PLACED IN THE ACID FIELD.
*
* WORD
* DATA    =  0 INDICATES THAT THE DATA FIELD IS NOT REQUIRED FOR THIS
*            COMMAND. A 1 INDICATES THAT IT MUST BE PRESENT. THE VALUE
*             NUM  INDICATES THE FIELD MUST BE NUMERIC. THE VALUE
*             CHAR  INDICATES THE FIELD MUST BE CHARACTER.
*            THE VALUE  OPTC  MEANS IF PROVIDED THE FIELD MUST BE
*            A CHARACTER VALUE.
*            THE VALUE  OPTN  MEANS IF PROVIDED THE FIELD MUST BE
*            A NUMERIC VALUE.
*
* WORD
* DATA2   =  0 INDICATES THAT THE DATA2 FIELD IS NOT REQUIRED FOR THIS
*            COMMAND. A 1 INDICATES THAT IT MUST BE PRESENT. THE VALUE
*             NUM  INDICATES THE FIELD MUST BE NUMERIC. THE VALUE
*             CHAR  INDICATES THE FIELD MUST BE CHARACTER.
*            THE VALUE  OPTC  MEANS IF PROVIDED THE FIELD MUST BE
*            A CHARACTER VALUE.
*            THE VALUE  OPTN  MEANS IF PROVIDED THE FIELD MUST BE
*            A NUMERIC VALUE.
*
* WORD
* AUTH    =  A NUMBER FROM 1 TO 10 (10 BEING HIGHEST AUTH). TO INDICATE
*            THE AUTHORITY NEEDED TO EXECUTE THIS COMMAND.
*            LEVEL OVERVIEW:
*            10 = ALL COMMANDS, CAN EVEN BREAK SOME INTEGRETY RULES
*             9 = NO GLOBAL DATABASE COMMANDS, NO LSCA CREATION
*                 CANT MAKE PASSWORD NON EXPIRING.
*             8 = CANT CHANGE THE STC TABLE
*             7 = SAME AS 8
*             6 = SAME AS 8
*             5 = CANT RUN THE BILLING UPDATE JOB
*             4 = CANT RESURRECT, AUDIT, GIVE OR TAKE AWAY BOOK AUTH,
*                 CONVERT
*             3 = NO TSO AUTHS CHANGES, NO ID ADD/RENAME,
*                 NO CUSTOM PWORD CHANGES
*             2 = NO LISTPW
*             1 = NONE ( EVERYONE IS A 1)
*
* WORD
* TRAP    =  A 0 OR  OFF  VALUE WILL CAUSE ALL WRITES OR SAYS FROM THE
*            EXEC TO APPEAR ON THE USERS SCREEN. NORMALLY OUTPUT IS
*            TRAPPED AND THE SECRC VAR IS CHECKED. THIS VALUE WILL NOT
*            CHANGE SECRC RETRIEVAL LOGIC.
*
* WORD
* BATCH   =  A 0 INDICATES THAT THE EXEC WILL NOT RECEIVE
*            CONTROL (OR COMMAND WILL NOT BE ISSUED) IF USER
*            IS IN BATCH MODE, BUT THAT A RECORD IS TO BE
*            WRITTEN TO THE BATCH FILE.
*
*            1 = INDICATES THAT THE COMMAND IS TO BE ISSUED
*            IN ANY ENVIRONMENT AND DOES SUPPORT A PREOPENED
*            BATCH FILE FOR UPDATES ( FEW EXECS NEED A 1 ).
*            THE COMMAND SHOULD NOT CLOSE THE FILE
*
*            2 =   ANY OTHER VALUE RESULTS IN THE COMMAND BEING
*            ISSUED IMMEDIATELY REGARDLESS OF THE MODE, WITH NO
*            OPEN BATCH FILE, THIS SHOULD NOT BE SPECIFIED FOR
*            ANY COMMANDS THAT UPDATE TOP SECRET . THE PURPOSE OF BATCH
*            MODE IS TO DEFER ALLUPDATES TILL THE JCL IS RUN.
*
*
* THE REST ARE
* VARS    =  A LIST OF THE VARIABLES THAT THIS EXEC USES .
*            THE LIST OF VARS TO BE PASSED. IF A LITERAL
*            VALUE IS TO BE PASSED PREFACE THE VALUE WITH AN UNDERSCORE.
*            THIS IS A MUST IF THERE IS A SPECIAL CHARACTER IN THE
*            LITERAL.
*            EXAMPLE :  _ADD( $1.ACID _) _AUDIT
*            WILL TRANSLATE TO  ADD( CHTSDIR ) AUDIT   IF $1.ACID = CHTSDIR
*            IF THERE CANNOT BE IMBEDDED SPACES BETWEEN A LITERAL AND A              9
*            VARIABLE OR TWO VARIABLES THEN PREFACE THE RIGHTMOST VALUE
*            WITH A  <  .
*            EXAMPLE :  _PER( $1.ACID _) _SDSF(ISFAUTH.DEST. <DATA _)
*            WILL TRANSLATE TO  PER( CHTSDIR ) SDSF(ISFAUTH.DEST.LOCAL )
*
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
 ADD      TVER.IADD DATA   0     0    4    ON     1      $1.ACID MODE
 ADDDEF   TVER.ADD  DATA   0     0    4    ON     1      $1.ACID MODE
 ADDACCT  TVER.TSO  1      NUM   0    4    ON     0      OPT $1.ACID _NIL DATA TSOUNIT TSOSIZE
 ADDID    TVER.IADD DATA   0     0    4    ON     1      $1.ACID MODE
 ADDPROC  TVER.TSO  1      1     0    4    ON     0      OPT $1.ACID DATA _NIL TSOUNIT TSOSIZE
 ADDPROC1 TVER.TSO  1      1     0    4    ON     0      OPT $1.ACID V1 _NIL TSOUNIT TSOSIZE
 ADMIN    TVER.ADMIN 1     NUM   0    5    ON     0      $1.ACID DATA
 AUDIT    %TSSJAUD  1      NUM   0    5    ON     2      DS5 $1.ACID DATA
 AUTHRUN  %AUTHRUN  1      CHAR  0    4    ON     0      DEF <_( <DATA <_) $1.ACID
 MAKECFILE %TSSCFILE 1     0     0    5    ON     2
 COMPARE  %T50ICOMP 1      CHAR  0    3    ON     2      _COMPARE ACID DATA
 CONVERT  %T50ICOMP 1      0     0    5    LOG    2      _REBUILD ACID
 DSCOPY   %DSCOPY   1      CHAR  0    5    ON     2      ACID DATA
 RPERMIT   %T50ICOMP 1     0     0    5    LOG    2      _*PERMIT ACID
 RREVOKE   %T50ICOMP 1     0     0    5    LOG    2      _*REVOKE ACID
 MODIFY   %T50ICOMP 1      0     0    5    LOG    2      _MODIFY  $1.ACID
 BALANCE  %T50ICOMP 1      0     0    5    LOG    2      _BALANCE ACID
 CONAUTH  %T50ICOMP 1      0     0    5    LOG    2      _PERMIT  ACID
 CONPERM  %T50ICOMP 1      0     0    5    LOG    2      _PERMIT  ACID
 CONREVOKE %T50ICOMP 1     0     0    5    LOG    2      _REVOKE  ACID
 RTRANSLATE %FSDISP  1     0     0    5    LOG    2      _%T50ICOMP _*TRANSLATE  ACID
 TRANSLATE %FSDISP   1     0     0    5    LOG    2      _%T50ICOMP _TRANSLATE  ACID
 LISTDUP  %T50ICOMP 1      0     0    3    ON     2      _LISTDUP ACID
 B1       %RXBROWSE 0      0     0    2    ON     2      DS1
 B2       %RXBROWSE 0      0     0    2    ON     2      DS2
 B3       %RXBROWSE 0      0     0    2    ON     2      DS3
 B4       %RXBROWSE 0      0     0    2    ON     2      DS4
 B5       %RXBROWSE 0      0     0    2    ON     2      DS5
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
 BILLJOB  %IMSBILLJ 0      0     0    5    OFF    2
 BKADMIN  TVER.BKAD 1      NUM   0    5    ON     0      $1.ACID DATA
 BKADD    TVER.BKAD 1      NUM   0    5    ON     0      $1.ACID DATA
 BKDEL    TVER.BKDE 1      NUM   0    5    ON     0      $1.ACID DATA
 BKDELETE TVER.BKDE 1      NUM   0    5    ON     0      $1.ACID DATA
 BKDEADMIN TVER.BKDE 1     NUM   0    5    ON     0      $1.ACID DATA
 BKREMOVE TVER.BKDE 1      NUM   0    5    ON     0      $1.ACID DATA
 BKOWN    TVER.BKOWN 1     NUM   0    9    ON     0      $1.ACID DATA
 BROWSE   %RXBROWSE 0      0     0    3    ON     2      $1.ACID
 BUILDCMD %TBMCMD   0      0     0    8    ON     2      SRCCMD TABLEDSN CMDPRE $1.ACID
 BUILDSCR %TBMSCR   0      0     0    8    ON     2      SRCSCR TABLEDSN SCRPRE $1.ACID
 CACHESTAT %FSDISP  0      0     0    8    ON     2      _TSS _MODIFY _CACHE(STATUS)
 CATSYNC   %CATSYNC 1      CHAR  0    8    ON     2      $1.ACID DATA DS3
 CANCEL    %CONCMD  0      0     0    8    ON     2      _C _U= <ACID
 CICSTERM %CICSTRM1 1      CHAR  0    4    ON     0      $1.ACID DATA
 CLASSADD  TSS      0      1     0    6    OFF    0      _PER( $1.ACID _) _DSN(TSS.JOBCLASS. <DATA _) _ACC(ALL)
 CLASSLOCK TSS      0      0     0    6    OFF    0      _PER(ALL) _DSN(TSS.JOBCLASS. <ACID _) _ACC(NONE)
 CLASSOPEN TSS      0      0     0    6    OFF    0      _REV(ALL) _DSN(TSS.JOBCLASS. <ACID _)
 CLASSREM  TSS      0      1     0    6    OFF    0      _REV( $1.ACID _) _DSN(TSS.JOBCLASS. <DATA _)
 CLISTADD  TSS      0      1     0    9    ON     0      _PER( $1.ACID _) _DSN(TSS.CLIST. <DATA _) _ACC(ALL)
 CLISTREM  TSS      0      1     0    9    ON     0      _REV( $1.ACID _) _DSN(TSS.CLIST. <DATA _)
 CLONE    %T50CON   0      1     0    4    ON     0      $1.ACID DATA
 CMDS     %FSDISP   0      0     0    5    ON     2      ACID
 CO       TVER.CON  1      0     0    5    ON     2      $1.ACID
 CONVERT  TVER.ICOMP 1     0     0    5    ON     2      _REBUILD ACID
 CONVERTID        TVER.CON  1 0  0    5    ON     2      $1.ACID
 CONVERTACID      TVER.CON  1 0  0    5    ON     2      $1.ACID
 CONVERTRESOURCE  TVER.RCON 1 0  0    5    ON     2      $1.ACID DATA DATA2
 CONVERTRESOURCER TVER.RCON 1 0  0    5    ON     2      $1.ACID DATA _REMOVE
 CONVERTRESOURCEA TVER.RCON 1 0  0    5    ON     2      $1.ACID DATA _AUDIT
 CONNEW   %T51CON   1      0     0    5    ON     2      $1.ACID
 DEFTSO   TVER.TSO  1      1     NUM  4    ON     0      _DEFAULTS $1.ACID DATA DATA2 TSOUNIT TSOSIZE
 DEFACCT  TVER.TSO  1      NUM   0    4    ON     0      OPT $1.ACID _NIL DATA TSOUNIT TSOSIZE
 DEFPROC  TVER.TSO  1      1     0    4    ON     0      OPT $1.ACID DATA _NIL TSOUNIT TSOSIZE
 DE       TVER.DEL  1      0     0    4    ON     0      $1.ACID MODE
 DEFSIZE  TVER.TSO  1      NUM   0    4    ON     0      OPT $1.ACID _NIL _NIL TSOUNIT DATA
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
*
 DEFUNIT  TVER.TSO  1      1     0    4    ON     0      OPT $1.ACID _NIL _NIL DATA _NIL
 DELETE   TVER.IDEL 1      0     0    4    ON     0      $1.ACID MODE
 DISCONNECT TVER.DISC 1    0     0    8    ON     2      $1.ACID MODE
 DSNALL   TVER.DSNP 1      CHAR  0    5    ON     0      $1.ACID DATA _ALL DATA2
 DSNAUTH  TVER.DSNP 1      CHAR  1    5    ON     0      $1.ACID DATA DATA2
 DSNCON   TVER.DCON 1      0     0    8    ON     2      $1.ACID
 DSNCONA  TVER.DCON 1      0     0    8    ON     2      $1.ACID _AUDIT
 DSNMODIFY TVER.GRANT 1    CHAR  OPTN 4    ON     0      $1.ACID _DATASET DATA _UPDATE DATA2
 DSNNONE  TVER.DSNP 1      CHAR  0    5    ON     0      $1.ACID DATA _NONE DATA2
 DSNOWN   TVER.GRANT 1     CHAR  OPTN 4    ON     0      $1.ACID _DATASET DATA _ALL DATA2
 DSNREAD  TVER.DSNP 1      CHAR  0    5    ON     0      $1.ACID DATA _READ DATA2
 DSNREM   TVER.DCON 1      0     0    8    ON     2      $1.ACID _REMOVE
 DSNREMOVE TVER.DSNP 1     CHAR  0    5    ON     0      $1.ACID DATA _REVOKE DATA2
 DSNREMOVE TVER.GRANT 1    CHAR  OPTN 4    ON     0      $1.ACID _DATASET DATA _REMOVE
 DSNREVOKE TVER.DSNP 1     CHAR  0    5    ON     0      $1.ACID DATA _REVOKE DATA2
 DSNUPDATE TVER.DSNP 1     CHAR  0    5    ON     0      $1.ACID DATA _UPDATE DATA2
 DSNVIEW  TVER.GRANT 1     CHAR  OPTN 4    ON     0      $1.ACID _DATASET DATA _READ DATA2
 DSNWRITE TVER.DSNP 1      CHAR  0    5    ON     0      $1.ACID DATA _UPDATE DATA2
 EC       %RXEDIT   0      0     0    3    ON     2      _'TECH.SCA.CPROC'
 EDIT     %RXEDIT   0      0     0    3    ON     2      $1.ACID
 E1       %RXEDIT   0      0     0    2    ON     2      DS1
 E2       %RXEDIT   0      0     0    2    ON     2      DS2
 E3       %RXEDIT   0      0     0    2    ON     2      DS3
 E4       %RXEDIT   0      0     0    2    ON     2      DS4
 E5       %RXEDIT   0      0     0    2    ON     2      DS5
 GROUPDELETE TVER.GDEL 1   0     0    10   ON     1      $1.ACID MODE
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
*
 GCMD     TVER.GCMD 1      1     0    6    ON     1      $1.ACID DS3 DATA
 GROUPC   TVER.GCMD 1      1     0    6    ON     2      $1.ACID DS3 DATA
 I        %TSSINQ   DATA   0     0    2    OFF    2      $1.ACID AUD _31 _8 _7
 IDCHECK  %FSDISP   0      0     0    3    ON     2      _IDCHECK $1.ACID
 IMSBILL  %IMSBILL  1      0     0    4    ON     2      $1.ACID         _7
 INQOPID  %TSSINQ   DATA   0     0    2    OFF    2      $1.ACID AUD _65 _8 _7
 IE       %TSSINQ   DATA   0     0    2    OFF    2      $1.ACID AUD _3 _2 _8
 IN       TVER.INS   1     CHAR  OPTN 4    ON     0      $1.ACID DATA DATA2
 IO       %TSSINQ   DATA   0     0    2    OFF    2      $1.ACID AUD _65 _8 _7
 JESCON   TVER.JCON 1      0     0    10   ON     2      $1.ACID
 JESCONA  TVER.JCON 1      0     0    10   ON     2      $1.ACID _AUDIT
 JOBOWN   TVER.GRANT 1     CHAR  OPTN 4    ON     0      $1.ACID _JESSPOOL JESNODE <_.*. <DATA _ALL DATA2
 JOBOWNER TVER.GRANT 1     CHAR  OPTN 4    ON     0      $1.ACID _JESSPOOL JESNODE <_.*. <DATA _ALL DATA2
 JOBREAD  TVER.GRANT 1     CHAR  OPTN 4    ON     0      $1.ACID _JESSPOOL JESNODE <_.*. <DATA _READ DATA2
 JOBREMOVE TVER.GRANT 1    CHAR  OPTN 4    ON     0      $1.ACID _JESSPOOL JESNODE <_.*. <DATA _REMOVE
 JOBVIEW  TVER.GRANT 1     CHAR  OPTN 4    ON     0      $1.ACID _JESSPOOL JESNODE <_.*. <DATA _READ DATA2
 LISTBILL %TSSINQ   DATA   0     0    2    ON     2      $1.ACID _'TECH.BILLING.ACCTTABL' _1 _1 _52
 LISTNAMEB %TSSLNAME 1     0     0    4    ON     0      TVER <_PWHO $1.ACID DS3
 LISTNAME %TSSLNAME  1     0     0    4    ON     2      TVER <_PWHO $1.ACID DS3
 LISTNAMES %TSSLNAME 1     0     0    4    ON     2      TVER <_PWHO $1.ACID DS3
 LISTOUT  TVER.LSTO  1     1     0    4    ON     2      $1.ACID DATA DS1
 LISTPW   TVER.LISTP 1     0     0    3    ON     2      $1.ACID
 LNKLST   %FSDISP   0      0     0    3    ON     2      _LNKLST
 LFAC     %FSDISP   0      0     0    8    ON     2      _TSS _MODIFY _FAC( <ACID <_) _| _TSS _MODIFY _FAC( <ACID <_=BYPLIST)
 LS       %FSDISP   0      CHAR  0    2    ON     2      _TSS _LIST( $1.ACID _) _DATA( DATA _)
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
*
 LSCACON  TVER.LSCA 0      CHAR  0   10    ON     1      $1.ACID DATA MODE
 MAKECFILE %TSSCFILE 1     0     0    5    ON     2
 MAXSIZE  TVER.TSO  1      NUM   0    4    ON     0      OPT $1.ACID _NIL _NIL TSOUNIT DATA
 MEMLOOK  %MEMLOOK  0      CHAR  0    8    OFF    2      $1.ACID DATA
 MEMLOOKS %FSDISP   0      CHAR  0    8    OFF    2      _%MEMLOOK $1.ACID DATA
 NAME     %TSSINQ   DATA   0     0    2    OFF    2      $1.ACID AUD _31 _8 _7
 NAMESUB  %TSSLNAME 0      0     0    3    OFF    2      _DSNAME DS4 DS4
 M0DIFY   %T50PMENU 1      0     0    6    ON     1      $1.ACID MODE
 PCMDADD   TSS      0      1     1    5    OFF    0      _PER( $1.ACID _) _DSN(TSS.PANELCMD. <DATA <. <DATA2 _) _ACC(ALL)
 PCMDREM   TSS      0      1     1    5    OFF    0      _REV( $1.ACID _) _DSN(TSS.PANELCMD. <DATA <. <DATA2 _)
 PCMDLOCK  TSS      0      1     1    5    OFF    0      _PER(ALL) _DSN(TSS.PANELCMD. <DATA _. <DATA2 _) _ACC(READ)
 PCMDOPEN  TSS      0      1     1    5    OFF    0      _REV(ALL) _DSN(TSS.PANELCMD. <DATA <_. <DATA2 _)
 PCMDWHO  %FSDISP   1      0     0    5    ON     0      TVER <_WHOH _DSN _TSS.PANELCMD. <ACID <_. <DATA DS4 _SHR
 POPTEST1 %FSDISP   0      0     0    5    OFF    2      V1 V2 V3 V4 V5 V6
 PRINTDSN %TSSPRINT 1      0     0    4    ON     2      $1.ACID _NO
 P        TVER.REPPW 1     0     0    3    ON     2      $1.ACID _PASSWORD
 PWREP    TVER.REPPW 1     CHAR  0    2    ON     2      $1.ACID DATA
 PWREPLACE TVER.REPPW 1    CHAR  0    2    ON     2      $1.ACID DATA
 PWREPU   %TSSPWDR  1      CHAR  0    4    ON     2      $1.ACID DATA
 REFO     SUBMIT    0      0     0   10    OFF    2      OPIDJCL
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
*
 DSNTEST  %FSDISP   0      CHAR  CHAR 5    OFF    2      TVER <_DSSIM $1.ACID _DSN DATA _TSO DATA2 DS2
 JESIDADD TSS       0      CHAR  0    4    ON     2      _PER( $1.ACID _) _JESSPOOL(IMSJES2. <DATA _) _ACC(ALL)
 JESIDREMOVE TSS    0      CHAR  0    4    ON     2      _REV( $1.ACID _) _JESSPOOL(IMSJES2. <DATA _)
 JESJOBADD TSS      0      CHAR  0    4    ON     2      _PER( $1.ACID _) _JESSPOOL(IMSJES2.*. <DATA _) _ACC(ALL)
 JESJOBREMOVE TSS   0      CHAR  0    4    ON     2      _REV( $1.ACID _) _JESSPOOL(IMSJES2.*. <DATA _)
 RE       TVER.REM  1      0     0    6    ON     0      $1.ACID
 REMACCT  TVER.TSO  1      NUM   0    4    ON     0      OPT $1.ACID _NIL DATA TSOUNIT TSOSIZE
 REMPROC  TVER.TSO  1      1     0    4    ON     0      OPT $1.ACID DATA _NIL TSOUNIT TSOSIZE
 RENA     TVER.RENA 1      CHAR  0    4    ON     0      $1.ACID DATA
 RENAME   TVER.RENA 1      CHAR  0    4    ON     0      $1.ACID DATA
 REPPROF  TVER.GREP 1      CHAR  0   10    ON     2      $1.ACID DATA _YES
 REPLACE  TVER.GREP 1      CHAR  0   10    ON     2      $1.ACID DATA _YES
 REPP     TVER.REPPW 1     CHAR  0    4    ON     2      $1.ACID DATA
 RESURRECT TVER.UNDEL 1    0     0    5    OFF    1      $1.ACID MODE
 SAUDIT   %TSSSAUD  1      NUM   0    5    ON     2      DS5 $1.ACID DATA
 SCAN     %#SCANDSN 0      OPTC  0    5    OFF    2      $1.ACID DATA
 SNTCON   %SNTCON   1      0     0    9    ON     0      $1.ACID
 PCTCON   %PCTCON   1      0     0    9    ON     0      $1.ACID
 SDSFCON  %SDSFCON  1      0     0    5    ON     2      DS1
 SIMULATE %FSDISP   0      CHAR  CHAR 4    OFF    2      _TSASIM DS1
 XIMULATE %FSDISP   0      CHAR  CHAR 4    OFF    2      TVER <_DSSIM $1.ACID DATA _TSO DATA2 DS2
*         IN SIMULATE ABOVE, DATA IS TWO PARMS, RESOURCE TYPE AND RESOURCE NAME
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
*
 SIMDSN   TVER.TSSIM 0     OPTC  0    5    OFF    2      $1.ACID _DSN DATA _TSO DATA2 DS2
 LCFTEST   %FSDISP  0      CHAR  CHAR 5    OFF    2      TVER <_DSSIM $1.ACID _LCF DATA DATA2 _.NA. DS2
 RXNCRYPT  %RXNCRYPT 0     CHAR  0    9    ON     2      $1.ACID DATA
 SPOOLTEST %FSDISP  0      CHAR  CHAR 5    OFF    2      TVER <_DSSIM $1.ACID _JESSPOOL DATA _TSO DATA2 DS2
 TRACK    %TSSTRAK  1      NUM   0    5    ON     2      DS5 $1.ACID DATA
 TSSTATUS %FSDISP   0      0     0    6    OFF    0      _TSS _MODIFY _STATUS
 TRUSTME  %TSSDPANL 0      0     0    6    OFF    2      _AUTHNUM.JCARD.RECFILE.AUD.ACCTDSN.DSBACK.MSCA.TSOUNIT.TSOSIZE
 UADCON   TVER.UCON 0      0     0    4    OFF    0      $1.ACID
 UNIXAUTH %GIVEUID  1      0     0    8    OFF    0      $1.ACID
 UNSUS    TVER.USUS 1      0     0    2    ON     0      $1.ACID
 UNSUSPEND TVER.USUS 1     0     0    2    ON     0      $1.ACID
 VOLTEST  %FSDISP   0      CHAR  CHAR 5    OFF    2      TVER <_DSSIM $1.ACID _DASDVOL DATA _TSO DATA2 DS2
 TVOLTEST %FSDISP  0      1     CHAR 5    OFF    2      TVER <_DSSIM $1.ACID _TAPEVOL DATA _TSO DATA2 DS2
 VIEWCMD  %TBVIEW   0      0     0   10    OFF    2      CMDTABLE _1
 VIEWSCR  %TBVIEW   0      0     0   10    OFF    2      SCRTABLE _0
 WHOHASF  %TSSPDS   1      0     0    3    OFF    2      $1.ACID FACDSN
 X1       EXEC      0      0     0    3    OFF    2      DS1
 X2       EXEC      0      0     0    3    OFF    2      DS2
 X3       EXEC      0      0     0    3    OFF    2      DS3
 X4       EXEC      0      0     0    3    OFF    2      DS4
 X5       EXEC      0      0     0    3    OFF    2      DS5
*
* NOW COME THE NON REXX BASED COMMANDS MOST ARE CALLS TO TSS
* WITH PARMS SUPPLIED IN THE PANELS FIELDS.
* REMEMBER THE UNDERSCORE SPECIFIES A LITERAL VALUE
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
 ADDAUD   TSS       0      0     0    6    ON     0      _ADD( $1.ACID _) _AUDIT
 ADDSIT   TSS       0      CHAR  0    4    ON     0      _ADD( $1.ACID _) _SITRAN( <DATA <_, <DATA2 _)
 ADDSTC   TSS       0      CHAR  0    9    ON     0      _ADD(STC) _PROC( $1.ACID _) _ACID( DATA _)
 ADDLIKE  TSS       0      CHAR  0    5    ON     0      _CREATE( $1.ACID _) _USING( DATA _)
 AF       TSS       0      CHAR  0    4    ON     0      _ADD( $1.ACID _) _FAC( DATA _)
 CMDPER   TSS       0      CHAR  0    5    ON     0      _PER( $1.ACID _) _DSN(TSS.PANELCMD. <DATA <_. <DATA2 _) _ACCESS(ALL)
 CMDREV   TSS       0      CHAR  0    5    ON     0      _REV( $1.ACID _) _DSN(TSS.PANELCMD. <DATA <_. <DATA2 _)
 CMDWHO   %FSDISP   0      0     0    5    ON     0      _TSS _WHOHAS _DSN(TSS.PANELCMD. <ACID _)
 DSNOWN   TSS       0      CHAR  0    9    ON     0      _ADD( $1.ACID _) _DSN( DATA <_.)
 DESTOWN  TSS       0      CHAR  0    6    ON     0      _PER( $1.ACID _) _SDSF(ISFAUTH.DEST. <DATA _) _ACCESS(ALL)
 DESTREAD TSS       0      CHAR  0    6    ON     0      _PER( $1.ACID _) _SDSF(ISFAUTH.DEST. <DATA _)
 EXPIRE   TSS       0      NUM   0    3    ON     0      _ADD( $1.ACID _) _FOR( DATA _)
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
 L        TSS       0      CHAR  0    2    OFF    2      _LIST( $1.ACID _) _DATA( DATA _)
 LS       %FSDISP   0      CHAR  0    2    ON     2      _TSS _LIST( $1.ACID _) _DATA( DATA _)
 NEWNAME  TSS       0      CHAR  0    4    ON     0      _REP( $1.ACID _) _NAME(' DATA <_')
 DECRYPT  %FSE      0      OPTC  0    4    ON     0      _%DCRYPT $1.ACID _SCREEN DATA
 DCRYPT   %FSE      0      OPTC  0    4    ON     0      _%DCRYPT $1.ACID _SCREEN DATA
 DCRYPTDSN %DCRYPT  0      OPTC  0    5    ON     0      $1.ACID _DISK DATA
 ENCRYPT  %NCRYPT   0      OPTC  0    4    ON     0       $1.ACID DATA
 LO       TVER.LSTO 1      1     0    2    ON     2       $1.ACID DATA DS1
 MODFAC   TSS       0      CHAR  0    9    ON     0       _MODIFY _FAC( <ACID <_= <DATA <_)
 OMVSR    TSS       0      CHAR  0    9    ON     0       _MODIFY _OMVSTABS
 TSSSTAT  %FSDISP   0      CHAR  0    9    ON     0       _TSS _MODIFY _STATUS
 OMVSREFRESH TSS    0      CHAR  0    9    ON     0       _MODIFY _OMVSTABS
 BYPADD   TSS       0      CHAR  0    9    ON     0       _MODIFY _FAC( <ACID <_=BYPADD <_( <DATA <_= <DATA2 <_))
 BYPREM   TSS       0      CHAR  0    9    ON     0       _MODIFY _FAC( <ACID <_=BYPREM <_( <DATA <_= <DATA2 <_))
 NCRYPT   %NCRYPT   0      OPTC  0    4    ON     0       $1.ACID DATA
 NEWOPID  TSS       0      1     0    4    ON     0      _ADD( $1.ACID   _) _OPIDENT( DATA _)
 OMONDEF  TSS       0      0     0    7    ON     0      _ADD(JOHNDOE _) _KOMCANDL( $1.ACID _)
 OMONPER  TSS       0      CHAR  0    7    ON     0      _PER( $1.ACID _) _KOMCANDL( DATA _)
 OMONREV  TSS       0      CHAR  0    7    ON     0      _REV( $1.ACID _) _KOMCANDL( DATA _)
 OPERCMDPER  TSS    0      CHAR  0    7    ON     0      _PER( $1.ACID _) _OPERCMDS( DATA _) _ACCESS(ALL)
 OPERCMDSPER  TSS   0      CHAR  0    7    ON     0      _PER( $1.ACID _) _OPERCMDS( DATA _) _ACCESS(ALL)
 OPERCMDSREV  TSS   0      CHAR  0    7    ON     0      _REV( $1.ACID _) _OPERCMDS( DATA _)
 OPERCMDREV  TSS    0      CHAR  0    7    ON     0      _REV( $1.ACID _) _OPERCMDS( DATA _)
 TPARMPROT TSS      0      1     1    5    ON     0      _ADD(IMSZONE) _PRODPARM( $1.ACID _)
 PPARMPROT TSS      0      1     1    5    ON     0      _ADD(IMSZONE) _PRODPARM( $1.ACID _)
 PPARMALL TSS       0      1     1    5    ON     0      _PER( $1.ACID _) _PRODPARM( DATA _) _ACCESS(ALL)
 PPARMREV TSS       0      1     1    5    ON     0      _REV( $1.ACID _) _PRODPARM( DATA _)
 TPARMREV TSS       0      1     1    5    ON     0      _REV( $1.ACID _) _TESTPARM( DATA _)
 TPARMALL TSS       0      1     1    5    ON     0      _PER( $1.ACID _) _TESTPARM( DATA _) _ACCESS(ALL)
 PWREPZ   TSS       0      0     0    8    ON     0      _REP( $1.ACID _) _PASSWORD( DATA _)
 PWNOXP   TSS       0      0     0    8    ON     0      _REP( $1.ACID _) _PASSWORD(*,0)
 PWX      TSS       0      0     0    8    ON     0      _REP( $1.ACID _) _PASSWORD(*,60)
 REMAUD   TSS       0      0     0    6    ON     0      _REM( $1.ACID _) _AUDIT
 REMEXP   TSS       0      0     0    8    ON     0      _REM( $1.ACID _) _FOR
*
* PNLNAME CMDNAME   MSG    DATA DATA2 AUTH TRAP BATCH  VARS
* -------------------------------------------------------------------
 REMSTC   TSS       0      CHAR  0    9    ON     0      _REM(STC) _PROC( $1.ACID _)
 RF       TSS       0      CHAR  0    4    ON     0      _REM( $1.ACID _) _FAC( DATA _)
 SITADD   TSS       0      CHAR  0    4    ON     0      _ADD( $1.ACID _) _SITRAN( <DATA <_, <DATA2 _)
 STCADD   TSS       0      CHAR  0    9    ON     0      _ADD(STC) _PROC( $1.ACID _) _ACID( DATA _)
 STCREM   TSS       0      CHAR  0    9    ON     0      _REM(STC) _PROC( $1.ACID _)
 U        TSS       0      0     0    2    ON     0      _REM( $1.ACID _) _SUSPEND
 SUSPEND  TSS       0      0     0    2    ON     0      _ADD( $1.ACID _) _SUSPEND
* POPUP DEFINITION COMMANDS ARE BELOW
* PNLNAME CMDNAME        MSG DATA DATA2 AUTH TRAP BATCH  VARS
  PERDSNALL /014.T50PER    1 0  0   4   ON     0   V1 _DATASET V2 _ALL
  PERDSNCR  /014.T50PER    1 0  0   4   ON     0   V1 _DATASET V2 _CREATE
  PERDSNUP  /014.T50PER    1 0  0   4   ON     0   V1 _DATASET V2 _UPDATE
  PERDSNREAD /014.T50PER   1 0  0   4   ON     0   V1 _DATASET V2 _READ
  PCONVERT  /001.T50ICOMP  1 0  0   5   ON     2   _PERMIT V1
  PREVOKE   /001.T50ICOMP  1 0  0   5   ON     2   _REVOKE V1
  FULLCON   /001.T50ICOMP  1 0  0   5   ON     2   _REBUILD V1
  BACKUP    /012.T50BKUP   1 0  0   3   ON     2   V1
  INSERT    /010.T50INS    1 0  0   4   ON     0   V1 V2 V3
  REMOVE    /011.T50INS    1 0  0   4   ON     0   V1 V2 _0
  RESCON    /002.T50ICOMP  1 0  0   5   ON     2   _*PERMIT V1 V2
  RESREVOKE /002.T50ICOMP  1 0  0   5   ON     2   _*REVOKE V1 V2
  LIST      /003.TSS       0 0  0   5   OFF    0   _LIST( V1 _) _DATA( V2 _)
  EXTEND    /009.TSS       0 0  0   5   ON     0   _REP( V1 _) _PASSWORD(*, <V2 _)
  US        /005.TSS       0 0  0   5   ON     0   _REM( V1 _) _SUSPEND  _ASUSPEND
  UE        /006.TSS       0 0  0   5   ON     0   _REM( V1 _) _EXPIRE
  AEXPIRE   /007.TSS       0 0  0   5   ON     0   _ADD( V1 _) _UNTIL( V2 _)
  ASUSPEND  /013.TSS       0 0  0   5   ON     0   _ADD( V1 _) _UNTIL( V2 _)
  RESET     /008.T50REM    0 0  0   6   ON     0   V1
  LISTS     /003.FS        0 0  0   5   ON     2   _TSS _LIST( V1 _) _DATA( V2 _)
  LISTO     /003.T50LSTO   1 0  0   5   ON     2   V1 V2 DS1
  AUTHORIZE /004.AUTHRUN   1 0  0   5   ON     0   DEF <_( <V2 <_) V1
*
* PNLNAME   CMDNAME     SCREEN
*
 1         /SCREEN      SPIBASIC
 1.0       /SCREEN      SPISTAT
 2         /SCREEN      SPILIST
 2.0       /SCREEN      SPISTAT
 3         /SCREEN      SPILIST
 3.0       /SCREEN      SPISTAT
 4         /SCREEN      SPIAUTH
 4.0       /SCREEN      SPISTAT
 5         /SCREEN      SPIBACKU
 6         /SCREEN      SPICONV
 8         /SCREEN      SPIDSNS
 8.0       /SCREEN      SPISTAT
 9         /SCREEN      SPIPROFS
 9.0       /SCREEN      SPISTAT
